(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    285504,       5416]
NotebookOptionsPosition[    282887,       5327]
NotebookOutlinePosition[    283245,       5343]
CellTagsIndexPosition[    283202,       5340]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Milnor Fibration Visualization\n",
 StyleBox["Author: Henry Blanchette, Reed College\nBased on code by Dan \
Dreibelbis, University of North Florida", "Subtitle"]
}], "Title",
 CellChangeTimes->{{3.708543883593997*^9, 3.708543973756325*^9}}],

Cell["", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4}],

Cell[CellGroupData[{

Cell["Setup / Options", "Chapter",
 CellChangeTimes->{{3.708543985741744*^9, 3.7085439959012537`*^9}, {
   3.708544057721072*^9, 3.7085440642968187`*^9}, 3.708559286629746*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Needs", "[", "\"\<CustomTicks`\>\"", "]"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "options", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"range", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"background", "=", "Black"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color1", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0.36"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color2", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0.36"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tubeColor", "=", "Purple"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotpoints", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"knotpoints", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tubeRadius", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opacity", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polygon", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "tubeRadius"}], ",", 
       RowBox[{"-", "tubeRadius"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "tubeRadius"}], ",", "tubeRadius"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tubeRadius", ",", "tubeRadius"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"tubeRadius", ",", 
       RowBox[{"-", "tubeRadius"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"viewpoint", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"imagesize", "=", 
    RowBox[{"{", 
     RowBox[{"800", ",", "600"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "default", " ", "location", " ", "for", " ", "exports", " ", "and", " ", 
    "such"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "workspace", "=", 
    "\"\</Users/Henry/Documents/Drive/ProjectProject/exports/mathematica_\
exports/fibrations/\>\""}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "vars", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"milnorf", ";", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"first", " ", "two", " ", "dimensions", " ", "of", " ", 
       RowBox[{"z", "^", "m"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"w", "^", "n"}], " ", "when", " ", "intersected", " ", "with", 
       " ", "S4_", 
       RowBox[{"\[Sqrt]", "2"}], " ", "then", " ", "stereo"}], "-", 
      RowBox[{"projected", " ", "into", " ", 
       RowBox[{"R", "^", "3"}], " ", "from", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "2"}], ",", "0", ",", "0"}], ")"}]}]}], " ", 
     "*)"}],
    FontSize->14], "\[IndentingNewLine]", "milnorg", ";", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"second", " ", "two", " ", "dimensions", " ", "of", " ", 
       RowBox[{"z", "^", "m"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"w", "^", "n"}], " ", "when", " ", "intersected", " ", "with", 
       " ", "S4_", 
       RowBox[{"\[Sqrt]", "2"}], " ", "then", " ", "stereo"}], "-", 
      RowBox[{"projected", " ", "into", " ", 
       RowBox[{"R", "^", "3"}], " ", "from", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "2"}], ",", "0", ",", "0"}], ")"}]}]}], " ", 
     "*)"}],
    FontSize->14], "\[IndentingNewLine]", "milnorlink", ";", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"intersection", " ", "of", " ", 
       RowBox[{"z", "^", "m"}]}], " ", "-", " ", 
      RowBox[{"w", "^", "n"}]}], " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{"0", " ", "and", " ", "S4_", 
       RowBox[{"\[Sqrt]", "2"}], " ", "the", " ", "stereo"}], "-", 
      RowBox[{"projected", " ", "into", " ", "R3", " ", "from", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "2"}], ",", "0", ",", "0"}], ")"}]}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"initialize", " ", "functions"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "takes", " ", "as", " ", "input", " ", "the", " ", "powers", " ", "in", 
      " ", 
      RowBox[{"z", "^", "n"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "^", "m"}], ".", "\[IndentingNewLine]", " ", 
       "generates"}], " ", "milnorf", " ", "and", " ", "milnorg"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "f", ",", "g", ",", "u", ",", "v", ",", "x", ",", "y", ",", "z", ",", 
        "w"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "^", "m"}], "-", 
          RowBox[{"v", "^", "n"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"u", "\[Rule]", 
            RowBox[{"x", "+", 
             RowBox[{"(", 
              RowBox[{"I", "*", "y"}], ")"}]}]}], ",", 
           RowBox[{"v", "\[Rule]", 
            RowBox[{"z", "+", 
             RowBox[{"(", 
              RowBox[{"w", "*", "I"}], ")"}]}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"f", " ", "and", " ", "g"}], ",", " ", 
         RowBox[{"normalized", " ", "to", " ", "radius", " ", 
          RowBox[{"\[Sqrt]", "2"}]}], ",", " ", 
         RowBox[{"stereo", "-", "projection"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"milnorf", ",", " ", "milnorg"}], "}"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ComplexExpand", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "f", "]"}], ",", " ", 
               RowBox[{"Im", "[", "f", "]"}]}], "}"}], "]"}], " ", "/.", "  ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "->", 
               FractionBox[
                RowBox[{" ", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["x", "2"], "+", 
                    SuperscriptBox["y", "2"], "+", 
                    SuperscriptBox["z", "2"]}], ")"}]}]}], 
                RowBox[{"2", "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"], "+", 
                 SuperscriptBox["z", "2"]}]]}], ",", 
              RowBox[{"y", "->", 
               FractionBox[
                RowBox[{"4", " ", "x"}], 
                RowBox[{"2", "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"], "+", 
                 SuperscriptBox["z", "2"]}]]}], ",", 
              RowBox[{"z", "->", 
               FractionBox[
                RowBox[{"4", " ", "y"}], 
                RowBox[{"2", "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"], "+", 
                 SuperscriptBox["z", "2"]}]]}], ",", 
              RowBox[{"w", "->", 
               FractionBox[
                RowBox[{"4", " ", "z"}], 
                RowBox[{"2", "+", 
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"], "+", 
                 SuperscriptBox["z", "2"]}]]}]}], "}"}]}], ")"}], "]"}], " ", 
         "*", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}], "+", 
            RowBox[{"z", "^", "2"}]}], ")"}], "^", 
          RowBox[{"Max", "[", 
           RowBox[{"m", ",", "n"}], "]"}]}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitKnot", "[", 
     RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "u", ",", "uu", ",", "v", ",", "x", ",", "y", ",", "z", ",", "w", ",", 
        "curves", ",", "tubes"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"curves", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"Sqrt", "[", "2", "]"}], " ", "y"}], 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"Sqrt", "[", "2", "]"}], " ", "z"}], 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"Sqrt", "[", "2", "]"}], " ", "w"}], 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}]}], "}"}], 
           "  ", " ", "/.", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "->", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"n", " ", "u"}], "+", 
                RowBox[{"2", " ", "Pi", " ", 
                 RowBox[{"k", "/", "m"}]}]}], "]"}]}], ",", 
             RowBox[{"y", "->", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"n", " ", "u"}], "+", 
                RowBox[{"2", " ", "Pi", " ", 
                 RowBox[{"k", "/", "m"}]}]}], "]"}]}], ",", 
             RowBox[{"z", "->", 
              RowBox[{"Cos", "[", 
               RowBox[{"m", " ", "u"}], "]"}]}], ",", 
             RowBox[{"w", "->", 
              RowBox[{"Sin", "[", 
               RowBox[{"m", " ", "u"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", " ", "0", ",", " ", 
            RowBox[{
             RowBox[{"GCD", "[", 
              RowBox[{"m", ",", " ", "n"}], "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tubes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"curves", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "curves", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"milnorlink", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ParametricPlot3D", "[", 
           RowBox[{"tubes", ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"tubeColor", ",", 
               RowBox[{"Tube", "[", "tubeRadius", "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotPoints", "\[Rule]", "knotpoints"}]}], "]"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"Background", "\[Rule]", "background"}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"ViewPoint", "\[Rule]", "viewpoint"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "imagesize"}]}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DrawKnot", "[", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{"milnorlink", ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "viewpoint"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "imagesize"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"draws", " ", "two", " ", "fibers"}], ",", " ", 
    RowBox[{
     RowBox[{
     "pairing", " ", "across", " ", "the", " ", "line", " ", "of", " ", 
      "infinity", " ", "in", " ", "the", " ", "stereo"}], "-", 
     "projection"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DrawFiberPair", "[", "t_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{"ContourPlot3D", "[", 
         RowBox[{
          RowBox[{"f", "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", 
            RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ColorFunction", "\[Rule]", " ", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", "ff"}], "}"}], 
             ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"g", ">", "0"}], ",", "color1", ",", " ", "color2"}], 
              "]"}]}], "]"}]}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{
           "different", " ", "colors", " ", "for", " ", "each", " ", 
            "fiber"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
          RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
          RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"Background", "\[Rule]", "background"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "draws", " ", "either", " ", "one", " ", "of", " ", "the", " ", "above", 
    " ", "mentioned", " ", "fibers"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DrawFiberSingle", "[", 
    RowBox[{"t_", ",", "index_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"region", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"index", "\[Equal]", "1"}], ",", 
         RowBox[{"(*", " ", 
          RowBox[{
          "this", " ", "removes", " ", "one", " ", "of", " ", "the", " ", 
           "fibers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
           RowBox[{"g", ">", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
           RowBox[{"g", "<", "0"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{"ContourPlot3D", "[", 
        RowBox[{
         RowBox[{"f", "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"RegionFunction", "\[Rule]", "region"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", " ", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", " ", "f"}], 
             "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"g", ">", "0"}], ",", "color1", ",", " ", "color2"}], 
             "]"}]}], "]"}]}], ",", "  ", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
         RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", " ", 
         RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
         RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"Background", "\[Rule]", "background"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708540065740361*^9, 3.7085402139550123`*^9}, {
   3.7085402642695017`*^9, 3.708540360096798*^9}, {3.7085404379816008`*^9, 
   3.708540724576687*^9}, {3.708541321883604*^9, 3.708541489528709*^9}, {
   3.708541611222945*^9, 3.708542026871991*^9}, {3.70854265861967*^9, 
   3.708542671212118*^9}, {3.708542710182578*^9, 3.708543404454467*^9}, {
   3.7085434395274973`*^9, 3.708543583153*^9}, {3.708543620247534*^9, 
   3.708543848498954*^9}, {3.708544077045368*^9, 3.708544130932995*^9}, {
   3.708548024609971*^9, 3.708548220846537*^9}, {3.708548279953657*^9, 
   3.708548646133491*^9}, {3.70854873969556*^9, 3.708548743573331*^9}, {
   3.708548782108639*^9, 3.708548818787409*^9}, {3.708548859012361*^9, 
   3.708548981717016*^9}, {3.70855289528616*^9, 3.708552903864458*^9}, {
   3.70855296307574*^9, 3.708552983486105*^9}, {3.708553013703093*^9, 
   3.7085530224926567`*^9}, {3.708553109713789*^9, 3.708553119548769*^9}, {
   3.708555311259177*^9, 3.708555325198204*^9}, {3.7085553747396793`*^9, 
   3.7085554095396338`*^9}, {3.7085554474108467`*^9, 3.708555489179262*^9}, {
   3.7085558847823687`*^9, 3.7085559121240797`*^9}, {3.708557454498962*^9, 
   3.708557458342128*^9}, {3.7085580190559397`*^9, 3.708558019574162*^9}, {
   3.708558087826725*^9, 3.708558189803924*^9}, {3.708558226807931*^9, 
   3.708558311335788*^9}, {3.708558524230091*^9, 3.708558545684857*^9}, {
   3.708558586294998*^9, 3.708558586422703*^9}, {3.708558644145792*^9, 
   3.708558782448451*^9}, {3.708558875979766*^9, 3.708558931135873*^9}, {
   3.708559093044908*^9, 3.708559095587985*^9}, {3.70855913349756*^9, 
   3.708559133625244*^9}, {3.708559190266481*^9, 3.708559190829075*^9}, {
   3.708559387014612*^9, 3.7085594540185204`*^9}, {3.708559605405398*^9, 
   3.7085596057135897`*^9}, {3.7085597000955467`*^9, 3.708559704103239*^9}, {
   3.7085603715093307`*^9, 3.708560378769589*^9}, {3.7085607060266933`*^9, 
   3.708560721873662*^9}, {3.7085607545087214`*^9, 3.7085607602661963`*^9}, {
   3.70856095300956*^9, 3.708561044243561*^9}, {3.708561081804743*^9, 
   3.70856109454208*^9}, {3.708561129882862*^9, 3.708561130295373*^9}, {
   3.708561355118833*^9, 3.708561362271743*^9}, {3.708561455188715*^9, 
   3.70856148849362*^9}, {3.70856154392735*^9, 3.708561580570613*^9}, {
   3.708561658471806*^9, 3.7085617088430357`*^9}, {3.708561742081164*^9, 
   3.70856177244252*^9}, {3.7085624986774893`*^9, 3.708562507219208*^9}, {
   3.7085627346457787`*^9, 3.708562735364662*^9}, {3.708563063053224*^9, 
   3.7085630959321623`*^9}, {3.7085631286956263`*^9, 
   3.7085631346454782`*^9}, {3.708563169476719*^9, 3.708563178119876*^9}, {
   3.708563261957244*^9, 3.708563262729946*^9}, {3.708563293504435*^9, 
   3.708563365174827*^9}, {3.70856345114111*^9, 3.708563458529388*^9}, {
   3.708571020488779*^9, 3.708571023520588*^9}, {3.7085710654262867`*^9, 
   3.708571073481517*^9}, {3.7085711188124437`*^9, 3.708571138413402*^9}, {
   3.708572837285059*^9, 3.708573056000794*^9}, {3.7085730880800753`*^9, 
   3.7085731140818233`*^9}, {3.708573152293357*^9, 3.708573162546795*^9}, {
   3.7085731959431047`*^9, 3.708573196164585*^9}, {3.7085732296481647`*^9, 
   3.708573274534009*^9}, {3.708573327122582*^9, 3.70857332720656*^9}, 
   3.7085733795575237`*^9, {3.7085734201013002`*^9, 3.708573431518139*^9}, {
   3.708573466733808*^9, 3.708573487198277*^9}, {3.7085735601817427`*^9, 
   3.708573576019251*^9}, {3.708573958424427*^9, 3.7085739586276493`*^9}, {
   3.708574097579933*^9, 3.7085740976428747`*^9}, {3.708574233149025*^9, 
   3.708574233268364*^9}, {3.70857515572456*^9, 3.708575155961084*^9}, {
   3.708575523674075*^9, 3.70857552375954*^9}, {3.708575569682526*^9, 
   3.708575569754326*^9}, {3.708605341848648*^9, 3.7086053419144373`*^9}, {
   3.708606188072277*^9, 3.708606188365926*^9}, {3.708606463189176*^9, 
   3.708606463361314*^9}, {3.708607053945348*^9, 3.708607082545444*^9}, {
   3.708607265348892*^9, 3.7086072685739202`*^9}, {3.708609150619519*^9, 
   3.7086091506911993`*^9}, {3.7086651330623817`*^9, 3.708665137261305*^9}, {
   3.708783092464321*^9, 3.7087830980301447`*^9}, {3.7087886615312757`*^9, 
   3.708788664966992*^9}, {3.708788702291082*^9, 3.708788710396268*^9}, {
   3.708791666914639*^9, 3.708791666969857*^9}, {3.708792597331839*^9, 
   3.708792597419593*^9}, {3.708792670939129*^9, 3.708792671025259*^9}, {
   3.708919591804267*^9, 3.7089196255930567`*^9}, {3.708919706759059*^9, 
   3.708919706972178*^9}, {3.708919754137084*^9, 3.708919754494935*^9}, {
   3.708921263551108*^9, 3.7089212653970337`*^9}, {3.7089509383782063`*^9, 
   3.708950950347692*^9}, {3.7089536050043907`*^9, 3.7089536050919447`*^9}, {
   3.709007059513666*^9, 3.709007070624165*^9}, {3.70904513250159*^9, 
   3.709045145677929*^9}, {3.709045177569169*^9, 3.70904517787903*^9}, {
   3.709471905746516*^9, 3.7094719078813963`*^9}, {3.709472688185727*^9, 
   3.709472688783595*^9}, {3.709472831473892*^9, 3.709472832586691*^9}, {
   3.709472931572751*^9, 3.709472933762251*^9}, {3.70947422694524*^9, 
   3.7094742390449333`*^9}, {3.709556097921247*^9, 3.709556100795434*^9}, {
   3.709556132569696*^9, 3.709556139073221*^9}, {3.709556678415785*^9, 
   3.709556679578061*^9}, {3.709556794334683*^9, 3.7095569862900467`*^9}, {
   3.709557023767453*^9, 3.7095570858083143`*^9}, {3.709559816818459*^9, 
   3.709559817449502*^9}, {3.7095637940779743`*^9, 3.70956379468824*^9}, {
   3.7095638285537777`*^9, 3.709563834730753*^9}, {3.709563876959113*^9, 
   3.70956388925325*^9}, {3.709563945185071*^9, 3.709563945799612*^9}, {
   3.7095640968869677`*^9, 3.7095641542796097`*^9}, {3.7095642167217093`*^9, 
   3.709564240668275*^9}, {3.70956440163246*^9, 3.709564421123394*^9}, {
   3.709564531687166*^9, 3.709564533383657*^9}, {3.7095652103486767`*^9, 
   3.709565275030231*^9}, {3.709565347987733*^9, 3.709565356843494*^9}, {
   3.709565413520165*^9, 3.709565425049561*^9}, {3.709566188789846*^9, 
   3.709566192012258*^9}, {3.709566419138722*^9, 3.709566420082172*^9}, {
   3.709566486727099*^9, 3.709566560728856*^9}, {3.70956815752032*^9, 
   3.709568198127141*^9}, {3.709568398837092*^9, 3.709568453679747*^9}, {
   3.709568500417447*^9, 3.709568528810704*^9}, {3.7095687182598677`*^9, 
   3.709568722972376*^9}, {3.709568761215212*^9, 3.709568811033761*^9}, {
   3.709568926249085*^9, 3.709568963036269*^9}, {3.7095690061365843`*^9, 
   3.709569085362322*^9}, {3.709569174792294*^9, 3.7095691773790073`*^9}, {
   3.7095725719283953`*^9, 3.709572577183242*^9}, {3.709572609963026*^9, 
   3.709572611265472*^9}, {3.7095734285174103`*^9, 3.709573430851451*^9}, {
   3.709575480794118*^9, 3.7095754827447147`*^9}, {3.709575604032207*^9, 
   3.709575604401388*^9}, {3.709576204106148*^9, 3.709576204336711*^9}, {
   3.709576340574753*^9, 3.7095763572553988`*^9}, {3.709576490095611*^9, 
   3.709576493653392*^9}, {3.709579976654718*^9, 3.709580003625061*^9}, {
   3.70958570345296*^9, 3.709585703651713*^9}, {3.709585872019989*^9, 
   3.709585872128025*^9}, {3.709654533128314*^9, 3.709654538776376*^9}, {
   3.709841031883843*^9, 3.709841035526041*^9}, {3.709906903152673*^9, 
   3.7099069139086018`*^9}, {3.709908640821253*^9, 3.709908641401778*^9}, {
   3.709927847072413*^9, 3.709927847590424*^9}, {3.710071940945218*^9, 
   3.7100719447685547`*^9}, {3.710073456425427*^9, 3.710073457129244*^9}, {
   3.71007391362704*^9, 3.710073914773054*^9}, {3.710214196764336*^9, 
   3.7102141970752487`*^9}, {3.710214227973714*^9, 3.71021422844473*^9}, {
   3.710262836832488*^9, 3.7102628438513403`*^9}, {3.71026287497752*^9, 
   3.7102628883778048`*^9}, {3.7102632814516478`*^9, 3.710263343940425*^9}, {
   3.7102634326988688`*^9, 3.710263451098281*^9}, {3.710263486247344*^9, 
   3.710263491259306*^9}, {3.710263584847825*^9, 3.7102635942664003`*^9}, {
   3.710505658312601*^9, 3.710505664869094*^9}, {3.71050619119818*^9, 
   3.7105062085565557`*^9}, 3.710718562366083*^9, {3.7107698386591167`*^9, 
   3.710769840169094*^9}, {3.710769990698101*^9, 3.710770020041843*^9}, {
   3.710860811418399*^9, 3.7108608121939983`*^9}, {3.711068316265416*^9, 
   3.711068318674383*^9}, {3.711068372899848*^9, 3.71106851922189*^9}, {
   3.711068966995782*^9, 3.711068980664747*^9}, {3.7110693455386*^9, 
   3.7110693462090693`*^9}, {3.711069420021302*^9, 3.7110694227416077`*^9}, {
   3.711142760560651*^9, 3.711142760751697*^9}, {3.711292368109146*^9, 
   3.7112923694780483`*^9}, {3.71130298566358*^9, 3.711302998557534*^9}, {
   3.7113032132449827`*^9, 3.7113032133185263`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modeling", "Chapter",
 CellChangeTimes->{{3.708544031359688*^9, 3.708544033399499*^9}}],

Cell["\<\
\[LineSeparator]The following functions implement utilities for 3D modeling.\
\>", "Text",
 CellChangeTimes->{{3.708562362071145*^9, 3.7085623654715242`*^9}, {
   3.708570860481636*^9, 3.708570903954735*^9}, 3.708792607604752*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"model", " ", 
    RowBox[{"thickening", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"method", " ", "1"}], ":", " ", "infilling"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"fill", " ", "region", " ", "where", " ", "f"}], " ", 
     "\[LessEqual]", " ", 
     RowBox[{
     "0.", " ", "this", " ", "method", " ", "works", " ", "well", " ", 
      "specifically", " ", "for", " ", "printing", " ", "just", " ", "one", 
      " ", "pair", " ", "of", " ", 
      RowBox[{"fibers", ".", " ", "however"}]}]}], ",", " ", 
    RowBox[{"this", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "end", " ", "up", " ", "being", " ", 
     "very", " ", "mathematically", " ", "accurate"}], ",", " ", 
    RowBox[{"however", " ", "physically", " ", "appealing"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"InfillFiberPair", "[", "t_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"RegionPlot3D", "[", 
          RowBox[{
           RowBox[{"f", "\[LessEqual]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", " ", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", " ", "f"}], 
               "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"g", ">", "0"}], ",", "color1", ",", " ", "color2"}], 
               "]"}]}], "]"}]}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "different", " ", "colors", " ", "for", " ", "each", " ", 
             "fiber"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
           RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InfillFiberSingle", "[", "t_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"RegionPlot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "\[LessEqual]", "0"}], "&&", 
            RowBox[{"g", "\[GreaterEqual]", "0"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "defaults", " ", "to", " ", "one", " ", "of", " ", "the", " ", 
             "fibers"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", " ", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", " ", "f"}], 
               "}"}], ",", "color1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", 
           RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "draws", " ", "either", " ", "one", " ", "of", " ", "the", " ", "above", 
     " ", "mentioned", " ", "fibers"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ThickFiberSingle", "[", 
      RowBox[{"t_", ",", "index_", ",", "thickness_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"region", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"index", "\[Equal]", "1"}], ",", 
           RowBox[{"(*", " ", 
            RowBox[{
            "this", " ", "removes", " ", "one", " ", "of", " ", "the", " ", 
             "fibers"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
             RowBox[{"g", ">", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
             RowBox[{"g", "<", "0"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"ContourPlot3D", "[", 
          RowBox[{
           RowBox[{"f", "\[Equal]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"RegionFunction", "\[Rule]", "region"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
           RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", " ", 
           RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Extrusion", "\[Rule]", "thickness"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ThickFiberPair", "[", "t_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorf"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], "*", "milnorf"}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], "*", "milnorg"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"ContourPlot3D", "[", 
          RowBox[{
           RowBox[{"f", "\[Equal]", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", " ", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "y", ",", " ", "z", ",", " ", "f"}], 
               "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"g", ">", "0"}], ",", "color1", ",", " ", "color2"}], 
               "]"}]}], "]"}]}], ",", "  ", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", " ", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", " ", 
           RowBox[{"PlotPoints", "\[Rule]", "plotpoints"}], ",", " ", 
           RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Extrusion", "\[Rule]", "0.2"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InitPolyKnot", "[", 
      RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "u", ",", "uu", ",", "v", ",", "x", ",", "y", ",", "z", ",", "w", ",",
          "curves", ",", "paths", ",", "tubes"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"curves", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Sqrt", "[", "2", "]"}], " ", "y"}], 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}], ",", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Sqrt", "[", "2", "]"}], " ", "z"}], 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}], ",", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 RowBox[{"Sqrt", "[", "2", "]"}], " ", "w"}], 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Sqrt", "[", "2", "]"}]}], "+", "x"}]]}]}], "}"}], 
            "  ", " ", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "->", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"n", " ", "u"}], "+", 
                 RowBox[{"2", " ", "Pi", " ", 
                  RowBox[{"k", "/", "m"}]}]}], "]"}]}], ",", 
              RowBox[{"y", "->", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"n", " ", "u"}], "+", 
                 RowBox[{"2", " ", "Pi", " ", 
                  RowBox[{"k", "/", "m"}]}]}], "]"}]}], ",", 
              RowBox[{"z", "->", 
               RowBox[{"Cos", "[", 
                RowBox[{"m", " ", "u"}], "]"}]}], ",", 
              RowBox[{"w", "->", 
               RowBox[{"Sin", "[", 
                RowBox[{"m", " ", "u"}], "]"}]}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "0", ",", " ", 
             RowBox[{
              RowBox[{"GCD", "[", 
               RowBox[{"m", ",", " ", "n"}], "]"}], "-", "1"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"milnorlink", "=", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"ParametricPlot3D", "[", 
            RowBox[{"tubes", ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", 
               RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Tube", "[", "tubeRadius", "]"}]}], "}"}]}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "knotpoints"}]}], "]"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Background", "\[Rule]", "background"}], ",", 
           RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"ViewPoint", "\[Rule]", "viewpoint"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "imagesize"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"milnorlink", "=", 
         RowBox[{"Show", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "path", ",", "frenet", ",", "transform", ",", "allpoints", ",",
                 "uStart", ",", "uEnd", ",", "nlist"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"path", "[", "t_", "]"}], ":=", 
                RowBox[{
                 RowBox[{"curves", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/.", 
                 RowBox[{"u", "\[Rule]", "t"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"uStart", ",", "uEnd"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"2", "*", "Pi"}]}], "}"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"nlist", "=", 
                  RowBox[{"(", 
                   RowBox[{"tubeRadius", "*", "polygon"}], ")"}]}], ")"}], "//", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Polygon", "[", "#", "]"}]}], "}"}], ",", 
                   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                   RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "&"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"frenet", "[", "u_", "]"}], "=", 
                RowBox[{
                 RowBox[{"FrenetSerretSystem", "[", 
                  RowBox[{
                   RowBox[{"path", "[", "u", "]"}], ",", "u"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ";", 
               RowBox[{
                RowBox[{"transform", "[", "u_", "]"}], ":=", 
                RowBox[{"Composition", "[", 
                 RowBox[{
                  RowBox[{"TranslationTransform", "[", 
                   RowBox[{"path", "[", "u", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"FindGeometricTransform", "[", 
                    RowBox[{
                    RowBox[{"frenet", "[", "u", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"allpoints", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"transform", "[", "u", "]"}], "/@", 
                   RowBox[{"(", 
                    RowBox[{"nlist", "/.", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "0"}], "}"}]}]}], ")"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"u", ",", "uStart", ",", "uEnd", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"uEnd", "-", "uStart"}], ")"}], "/", 
                    "knotpoints"}]}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"connectFaces", "[", 
                 RowBox[{"f1_", ",", "f2_"}], "]"}], ":=", 
                RowBox[{"Block", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"vertices", ",", "faces"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"vertices", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"f1", ",", "f2"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "these", " ", "vertices", " ", "will", " ", "only", " ", 
                    "work", " ", "for", " ", 
                    RowBox[{"squares", " ", ":", 
                    RowBox[{"(", " "}]}]}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"faces", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4", ",", "8", ",", "7"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "7", ",", "6", ",", "5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "5", ",", "1", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4", ",", "8", ",", "5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "7", ",", "6", ",", "2"}], "}"}]}], 
                    "}"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Graphics3D", "[", 
                    RowBox[{"GraphicsComplex", "[", 
                    RowBox[{"vertices", ",", 
                    RowBox[{"Polygon", "[", "faces", "]"}]}], "]"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"cuboids", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"connectFaces", "[", 
                   RowBox[{
                    RowBox[{"allpoints", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"allpoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "allpoints", "]"}], "-", "1"}]}], 
                   "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Show", "[", "cuboids", "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "curves", "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"stl", " ", "exports"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "convenient", " ", "since", " ", "it", " ", "handles", " ", "naming"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExportFiber", "[", 
      RowBox[{"m_", ",", "n_", ",", "t_", ",", "type_", ",", "result_"}], 
      "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "filename", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"filename", "=", 
         RowBox[{"type", "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", "m", "]"}], "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"N", "[", 
            RowBox[{"t", "/", "Pi"}], "]"}], "]"}], "<>", "\"\<.stl\>\""}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"workspace", "<>", "filename"}], ",", "result"}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.708570915993178*^9, 3.708570960414304*^9}, {
   3.708571155377722*^9, 3.708571304717958*^9}, {3.7085714425499783`*^9, 
   3.7085721634676456`*^9}, {3.7085721945534563`*^9, 3.708572271673311*^9}, {
   3.708572308982481*^9, 3.70857235122866*^9}, {3.7085724360567827`*^9, 
   3.708572548021781*^9}, {3.708573700176672*^9, 3.708573758841325*^9}, {
   3.708573808862892*^9, 3.708573822901915*^9}, {3.708573881647607*^9, 
   3.70857389182673*^9}, {3.708574064652323*^9, 3.7085740696237707`*^9}, {
   3.708574183749806*^9, 3.708574216133264*^9}, {3.7085742541361628`*^9, 
   3.7085742573271437`*^9}, {3.708574320884335*^9, 3.708574321809246*^9}, {
   3.708574460209216*^9, 3.708574469861972*^9}, {3.708574504368224*^9, 
   3.70857458741333*^9}, {3.708574639367631*^9, 3.708574642792407*^9}, {
   3.708574993127667*^9, 3.708575078290392*^9}, {3.708605357910904*^9, 
   3.708605368634624*^9}, {3.7086055757006474`*^9, 3.70860565270604*^9}, {
   3.708605721428132*^9, 3.708605732891163*^9}, {3.708605885866702*^9, 
   3.708605893687714*^9}, {3.7086060064246607`*^9, 3.708606010764327*^9}, {
   3.7086061658277063`*^9, 3.7086061677709103`*^9}, {3.70860621438393*^9, 
   3.7086062468172626`*^9}, {3.708606288160385*^9, 3.708606303496176*^9}, {
   3.708606359822261*^9, 3.708606443729632*^9}, {3.70860649706558*^9, 
   3.7086066568619537`*^9}, 3.708606714298964*^9, 3.7086067972389507`*^9, {
   3.708607104001685*^9, 3.708607124403082*^9}, {3.7095570975529947`*^9, 
   3.709557126775372*^9}, {3.709562843544738*^9, 3.709562862705805*^9}, {
   3.709575229841188*^9, 3.709575240782794*^9}, {3.709575275304888*^9, 
   3.709575307729006*^9}, {3.7095753506516247`*^9, 3.709575474411126*^9}, {
   3.7095756210350113`*^9, 3.709575626949211*^9}, {3.709575661929311*^9, 
   3.709575737115615*^9}, {3.709575772533044*^9, 3.709575858362083*^9}, {
   3.709575889410543*^9, 3.7095759267250423`*^9}, {3.709575989231998*^9, 
   3.7095761584084797`*^9}, {3.709576197795795*^9, 3.7095761998888483`*^9}, {
   3.7095762399711637`*^9, 3.709576337916102*^9}, {3.709583756120001*^9, 
   3.709583847828493*^9}, {3.7095854607837257`*^9, 3.709585504690275*^9}, {
   3.709586082651297*^9, 3.709586100121009*^9}, {3.709928061183847*^9, 
   3.709928093492415*^9}, {3.710214255558281*^9, 3.710214269247366*^9}, {
   3.710214447637443*^9, 3.710214475781568*^9}, {3.710214518744499*^9, 
   3.7102145363196497`*^9}, {3.710247587554565*^9, 3.710247596528079*^9}, {
   3.710506413190858*^9, 3.710506419467471*^9}, {3.7107239853979197`*^9, 
   3.7107239880207653`*^9}, {3.710769918158174*^9, 3.710769918270794*^9}, {
   3.710860746303043*^9, 3.710860746583528*^9}, {3.710860784377014*^9, 
   3.710860790307509*^9}, {3.71130300224701*^9, 3.7113030120354843`*^9}, {
   3.711303138095627*^9, 3.7113031456133947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stats", "Chapter",
 CellChangeTimes->{{3.708559205363358*^9, 3.7085592060419683`*^9}}],

Cell["\<\
2-3: With knot and at plot points \[Rule] 15 (I know, its low), takes about a \
minute to run.
2-3: Without knot and at plot points \[Rule] 200 (nicer!), takes 6 seconds.

Huge majority of time is spent on the knot tube.\
\>", "Text",
 CellChangeTimes->{{3.708559213010919*^9, 3.708559273260971*^9}, {
  3.708559417690557*^9, 3.708559493901689*^9}, {3.7085596718945*^9, 
  3.7085596857659483`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Chapter",
 CellChangeTimes->{{3.708544009542795*^9, 3.7085440217264633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"basic", " ", "example"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"2", ",", "3"}], "]"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"iconic", " ", "2"}], "-", 
     RowBox[{"3", " ", "torus", " ", "knot"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"DrawFiberPair", "[", "0", "]"}], 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"at", " ", "theta"}], "=", 
      RowBox[{"0", " ", "on", " ", "S4"}]}], " ", "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DrawFiberSingle", "[", 
    RowBox[{"0", ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708570507483283*^9, 3.708570553164969*^9}, {
  3.7085707492459307`*^9, 3.708570756541264*^9}, {3.708792244071656*^9, 
  3.708792259205678*^9}, {3.70947193001422*^9, 3.709471933706957*^9}, {
  3.7094720246418457`*^9, 3.709472024980249*^9}, {3.7094720580445633`*^9, 
  3.7094720895591507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"more", " ", "interesting", " ", "shape"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"4", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DrawFiberPair", "[", "0", "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "iterate", " ", "over", " ", "theta", " ", "to", " ", "get", " ", "a", 
     " ", "sense", " ", "of", " ", "leaves", " ", "of", " ", "S4"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DrawFiberSingle", "[", 
       RowBox[{"i", ",", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "Pi", ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708544044954624*^9, 3.7085440510802507`*^9}, {
   3.708544137542467*^9, 3.7085441791893578`*^9}, {3.708548657495422*^9, 
   3.708548670356565*^9}, 3.7085487203624477`*^9, {3.708558206513619*^9, 
   3.708558246519611*^9}, 3.708558594145856*^9, {3.7085590830852327`*^9, 
   3.708559087861569*^9}, {3.708559542729232*^9, 3.7085595429251842`*^9}, {
   3.708559625461915*^9, 3.708559666685486*^9}, {3.708560390398629*^9, 
   3.7085604069985647`*^9}, {3.708560479883088*^9, 3.70856052201128*^9}, {
   3.708560603215788*^9, 3.708560611939869*^9}, {3.7085606635294867`*^9, 
   3.708560680051565*^9}, {3.708560766744769*^9, 3.708560779294662*^9}, {
   3.708560835647738*^9, 3.708560915187374*^9}, {3.708561139222403*^9, 
   3.70856113931628*^9}, {3.7085614926508017`*^9, 3.708561492699244*^9}, {
   3.708561728615234*^9, 3.7085617287140923`*^9}, {3.7085617881982117`*^9, 
   3.70856189729989*^9}, {3.70856237570227*^9, 3.708562388181958*^9}, {
   3.7085625148105173`*^9, 3.708562514952571*^9}, {3.708562565796713*^9, 
   3.70856256959226*^9}, {3.708562607123864*^9, 3.7085626129387608`*^9}, {
   3.708562655749003*^9, 3.708562697765665*^9}, {3.708562762193358*^9, 
   3.70856280043032*^9}, {3.708562830557328*^9, 3.708562834784216*^9}, {
   3.7085628701111526`*^9, 3.708562870288013*^9}, {3.708562919778928*^9, 
   3.708562979955336*^9}, {3.708563010109432*^9, 3.708563010260766*^9}, {
   3.708563258202557*^9, 3.708563258382358*^9}, {3.708563423959093*^9, 
   3.7085634444206123`*^9}, 3.708570467517913*^9, {3.708570498429565*^9, 
   3.708570505689591*^9}, {3.708570688586832*^9, 3.708570728805749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"figit", " ", "spinner", " ", "of", " ", "course"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"1", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"o", "=", 
    RowBox[{"DrawFiberPair", "[", "0", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"workspace", "<>", "\"\<figitspinner.stl\>\""}], ",", "o"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"DrawFiberSingle", "[", 
     RowBox[{"0", ",", "1"}], "]"}], "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{"draw", " ", "just", " ", "one", " ", "fiber", " ", 
     RowBox[{"(", 
      RowBox[{"half", " ", "#1"}], ")"}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7085704832089977`*^9, 3.708570485494986*^9}, {
   3.7085705929342213`*^9, 3.70857065678516*^9}, {3.7085707409567747`*^9, 
   3.708570741798169*^9}, 3.708570790105846*^9, 3.708791644673048*^9, {
   3.708791741178067*^9, 3.708791742704517*^9}, {3.7087926288783207`*^9, 
   3.7087926586708612`*^9}}],

Cell[BoxData["\<\"/Users/Henry/Documents/ProjectProject/mathematica/exports/\
milnor/figitspinner.stl\"\>"], "Output",
 CellChangeTimes->{3.708792613109455*^9, 3.708792700439687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"example", " ", "of", " ", "infilling", " ", "method", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "Modeling"}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"1", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"InfillFiberSingle", "[", "0", "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"InfillFiberPair", "[", "0", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7085738278427153`*^9, 3.7085738597715483`*^9}, {
  3.708573937241027*^9, 3.7085739400067263`*^9}, {3.708574011146744*^9, 
  3.708574050963551*^9}, {3.708574223242939*^9, 3.708574223346875*^9}, {
  3.708574899143189*^9, 3.708574904400722*^9}, {3.7087925907958937`*^9, 
  3.7087925908282957`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.708792595127122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"example", " ", "of", " ", "page", " ", "method", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "Modeling"}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"PageFiberSingle", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Pi", "/", "16"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708574331054001*^9, 3.7085744179871597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "example", " ", "of", " ", "page", " ", "shaved", " ", "pair", " ", 
    "method", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "Modeling"}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "a", " ", "good", " ", "pay", " ", "to", " ", 
     "show", " ", "two", " ", "fibers", " ", "on", " ", "a", " ", "3", "D", 
     " ", "model", " ", "because", " ", "it", " ", "allows", " ", "them", " ",
      "to", " ", "be", " ", "moved", " ", "independently", " ", "because", 
     " ", "they", " ", 
     RowBox[{"aren", "'"}], "t", " ", "attached"}], ",", " ", 
    RowBox[{
    "as", " ", "they", " ", "are", " ", "shaved", " ", "away", " ", "from", 
     " ", "each", " ", "other"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"PageFiberShavedPair", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Pi", "/", "8"}], ",", "0.1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708574654053817*^9, 3.708574777474618*^9}, {
  3.708575302706732*^9, 3.70857532421036*^9}, {3.7085755179719753`*^9, 
  3.7085755181241426`*^9}, {3.708575586071953*^9, 3.708575586517597*^9}, {
  3.7086068354366827`*^9, 3.7086068480366087`*^9}, {3.708609165028956*^9, 
  3.708609166330593*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"workspace", "<>", "\"\<models/pagefibershavedpair23-HQ.stl\>\""}],
    ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.708692594883706*^9, 3.708692750420641*^9}, {
  3.7087921343000917`*^9, 3.7087921629884644`*^9}}],

Cell[BoxData["\<\"/Users/Henry/Documents/ProjectProject/mathematica/exports/\
milnor/models/pagefibershavedpair23-HQ.stl\"\>"], "Output",
 CellChangeTimes->{3.708692735862759*^9, 3.70869285958601*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Movie", "Chapter",
 CellChangeTimes->{{3.7085597347691*^9, 3.708559736207938*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", 
   RowBox[{"workspace", "<>", "\"\<movies/\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "4"}], ";", 
  RowBox[{"b", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frames", "=", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"title", "=", 
   RowBox[{"\"\<fiberpair\>\"", "<>", 
    RowBox[{"ToString", "[", "a", "]"}], "<>", 
    RowBox[{"ToString", "[", "b", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitFiberPair", "[", 
    RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"create", " ", "frames"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ",", 
     RowBox[{"i", "<", "frames"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", 
       RowBox[{"DrawFiberPair", "[", 
        RowBox[{"2", "*", "Pi", "*", 
         RowBox[{"i", "/", "frames"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"path", "<>", "\"\<raw/\>\"", "<>", "title", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", "+", "i"}], "]"}], "<>", " ", "\"\<.bmp\>\""}], ",", 
        " ", 
        RowBox[{"Rasterize", "[", 
         RowBox[{"frame", ",", " ", 
          RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compile", " ", "movie"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"movie", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"path", "<>", "\"\<raw/\>\"", "<>", "title", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"100", "+", "i"}], "]"}], "<>", "\"\<.bmp\>\""}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"frames", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"path", "<>", "title", "<>", "\"\<.avi\>\""}], ",", "movie"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70855975815317*^9, 3.708560168396145*^9}, {
  3.708561934680903*^9, 3.7085620415067244`*^9}, {3.708562093053486*^9, 
  3.7085620937727823`*^9}, {3.708563417874269*^9, 3.708563417909775*^9}, {
  3.708571083207458*^9, 3.708571111574769*^9}, {3.708608460334861*^9, 
  3.708608465932767*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Models", "Chapter"]], "Title",
 CellChangeTimes->{{3.709556618703795*^9, 3.709556627046629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"two", " ", "non"}], "-", 
    RowBox[{"opposite", " ", "fibers"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"InitFiber", "[", 
    RowBox[{"m", ",", "n"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitKnot", "[", 
     RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"o", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"DrawKnot", "[", "]"}], ",", 
      RowBox[{"ThickFiberSingle", "[", 
       RowBox[{"0", ",", "1"}], "]"}], ",", 
      RowBox[{"ThickFiberSingle", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], ",", "1"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"DrawKnot", "[", "]"}], ",", 
      RowBox[{"InfillFiberSingle", "[", "0", "]"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"workspace", "<>", "\"\<thick_knot_45_larger.stl\>\""}], ",", 
      "o"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7095681233603773`*^9, 3.709568147637816*^9}, {
   3.7095682207259617`*^9, 3.70956824865276*^9}, {3.7095688189341784`*^9, 
   3.7095688481573973`*^9}, {3.7095689702912703`*^9, 
   3.7095689725319567`*^9}, {3.709569091400167*^9, 3.7095691292492723`*^9}, {
   3.709573344822118*^9, 3.709573348603744*^9}, {3.709573385150661*^9, 
   3.709573405980461*^9}, 3.7095752154790983`*^9, {3.709595231480804*^9, 
   3.709595242068412*^9}, {3.709840594520105*^9, 3.7098406323087387`*^9}, {
   3.7098406665068197`*^9, 3.709840703857288*^9}, {3.709840743659193*^9, 
   3.70984079569165*^9}, {3.709840829866843*^9, 3.7098408537725973`*^9}, {
   3.709840884239443*^9, 3.709840885442173*^9}, {3.709840942501549*^9, 
   3.709840946656945*^9}, {3.709841842858736*^9, 3.70984186905893*^9}, {
   3.709842213948511*^9, 3.7098422288667917`*^9}, {3.70990692687519*^9, 
   3.70990693024081*^9}, {3.709906961658679*^9, 3.709906964138915*^9}, 
   3.709914032839509*^9, {3.709927869869705*^9, 3.709927887637444*^9}}],

Cell[BoxData["\<\"/Users/Henry/Documents/Drive/ProjectProject/exports/\
mathematica_exports/fibrations/thick_knot_45_larger.stl\"\>"], "Output",
 CellChangeTimes->{3.7099074525589523`*^9, 3.7099089570304117`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitFiber", "[", 
   RowBox[{"3", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"ThickFiberPair", "[", "0", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"workspace", "<>", "\"\<fiberoutline2-3.stl\>\""}], ",", "o"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitKnot", "[", 
   RowBox[{"3", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"DrawKnot", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"workspace", "<>", "\"\<knot2-3.stl\>\""}], ",", "o"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7099279138688393`*^9, 3.709928031828339*^9}, {
  3.709928102488861*^9, 3.709928150220457*^9}, {3.710718297026854*^9, 
  3.710718300070149*^9}, {3.71071854699469*^9, 3.710718687039496*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitFiber", "[", 
   RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anim", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"DrawFiberSingle", "[", 
      RowBox[{"t", ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}], ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"workspace", "<>", "\"\<test.avi\>\""}], ",", "anim"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.710071875277772*^9, 3.7100719281323643`*^9}, {
  3.7100719678233433`*^9, 3.710072138157509*^9}, {3.71007217727912*^9, 
  3.7100722435780287`*^9}, {3.710072318061861*^9, 3.710072369239077*^9}, {
  3.7100724279784718`*^9, 3.7100724579876013`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"anim", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"InitFiber", "[", 
         RowBox[{"n", ",", "m"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"DrawFiberPair", "[", "0", "]"}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Background", "\[Rule]", "Black"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"500", ",", "500"}], "}"}]}], ",", 
          RowBox[{"ViewPoint", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"Lighting", "->", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"\"\<Directional\>\"", ",", " ", "Blue", ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0", ",", " ", "3"}], "}"}]}], "}"}], 
            "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "7", ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"workspace", "<>", "\"\<movie_iteratedNM.avi\>\""}], ",", 
    RowBox[{"Flatten", "[", "anim", "]"}], ",", 
    RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.710073111315962*^9, 3.7100732401959352`*^9}, {
   3.710073294752846*^9, 3.7100732977340603`*^9}, {3.71007337076348*^9, 
   3.710073370804475*^9}, 3.710073566338253*^9, {3.7100736422855053`*^9, 
   3.710073644651061*^9}, {3.710073704151593*^9, 3.7100737777628202`*^9}, {
   3.710073837958624*^9, 3.710073854217498*^9}, {3.710073906793544*^9, 
   3.710073908049361*^9}, {3.7100740280233192`*^9, 3.710074064726755*^9}, 
   3.71007410460289*^9, {3.710074146555974*^9, 3.710074201241406*^9}, {
   3.71007428009757*^9, 3.710074300232998*^9}, {3.7100743660136642`*^9, 
   3.7100743696197557`*^9}, {3.7100744054477577`*^9, 3.710074460736061*^9}, {
   3.7100744908591833`*^9, 3.71007453128273*^9}, {3.710074562341951*^9, 
   3.710074590749861*^9}, {3.710074641168269*^9, 3.7100746412558603`*^9}, {
   3.7100746796815863`*^9, 3.7100746842821074`*^9}, {3.710074715836821*^9, 
   3.7100747185469713`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InitFiber", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"DrawFiberSingle", "[", 
      RowBox[{"0", ",", "2"}], "]"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Background", "\[Rule]", "Black"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"500", ",", "500"}], "}"}]}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DrawFiberPair", "[", "0", "]"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Background", "\[Rule]", "Black"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"500", ",", "500"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1.3", ",", "1.3"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.710073378895157*^9, 3.710073445492741*^9}, {
  3.710073479255568*^9, 3.710073544568556*^9}, {3.7100740188869133`*^9, 
  3.71007401981918*^9}, {3.710074135660349*^9, 3.710074137666181*^9}, {
  3.710505308899761*^9, 3.7105053124578667`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nameending", "=", 
   RowBox[{
    RowBox[{"ToString", "[", "m", "]"}], "<>", "\"\<:\>\"", "<>", 
    RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<.stl\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitFiber", "[", 
   RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"ThickFiberPair", "[", 
     RowBox[{"0", ",", "0"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"workspace", "<>", "\"\<fiberoutline\>\"", "<>", "nameending"}], 
     ",", "o"}], "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tubeRadius", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitKnot", "[", 
   RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"DrawKnot", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"workspace", "<>", "\"\<knotinner\>\"", "<>", "nameending"}], 
     ",", "o"}], "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tubeRadius", "=", "0.15"}], ";", "\[IndentingNewLine]", 
    RowBox[{"InitKnot", "[", 
     RowBox[{"m", ",", "n"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"o", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"DrawKnot", "[", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"workspace", "<>", "\"\<knotouter\>\"", "<>", "nameending"}], 
      ",", "o"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7102141139141808`*^9, 3.710214221696183*^9}, {
   3.710214283203401*^9, 3.710214421134837*^9}, {3.710214482483498*^9, 
   3.710214484736917*^9}, {3.710214551452115*^9, 3.710214805950818*^9}, {
   3.710247569735406*^9, 3.710247577409219*^9}, {3.710248057088829*^9, 
   3.7102480830647163`*^9}, {3.71024817136196*^9, 3.710248177682426*^9}, {
   3.710248235869381*^9, 3.7102482359485197`*^9}, {3.710248420252446*^9, 
   3.710248538728712*^9}, {3.710249471251067*^9, 3.710249471314146*^9}, {
   3.710249635001871*^9, 3.710249635080947*^9}, {3.7102497122850533`*^9, 
   3.7102497123236113`*^9}, {3.7102500900752163`*^9, 3.7102501605709047`*^9}, 
   3.710251136806839*^9, {3.7105048044066267`*^9, 3.710504833926338*^9}, {
   3.710504937653076*^9, 3.710504961900264*^9}, {3.71050499897432*^9, 
   3.7105050007576237`*^9}, {3.7105053150827837`*^9, 3.710505315770454*^9}, {
   3.710505378992785*^9, 3.710505392778644*^9}, {3.710506331205908*^9, 
   3.7105063534152*^9}, 3.71050640221332*^9, {3.710508190677569*^9, 
   3.710508203192224*^9}, {3.7107187281274843`*^9, 3.7107187281751337`*^9}, {
   3.71072379477645*^9, 3.710723798678029*^9}, 3.7107239565443153`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"page", " ", "pairs"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "n"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nameending", "=", 
     RowBox[{
      RowBox[{"ToString", "[", "m", "]"}], "<>", "\"\<:\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<.stl\>\""}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitFiber", "[", 
     RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"ThickFiberPair", "[", 
       RowBox[{"0", ",", "0"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"workspace", "<>", "\"\<fiberoutline\>\"", "<>", "nameending"}],
       ",", "o"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tubeRadius", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitKnot", "[", 
     RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"DrawKnot", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"workspace", "<>", "\"\<knotinner\>\"", "<>", "nameending"}], 
      ",", "o"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"tubeRadius", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitKnot", "[", 
     RowBox[{"m", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"o", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"DrawKnot", "[", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"workspace", "<>", "\"\<knotouter\>\"", "<>", "nameending"}], 
      ",", "o"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7107239380280113`*^9, 3.7107239604927483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitFiber", "[", 
   RowBox[{"2", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"workspace", "<>", "\"\<hopflink_single.stl\>\""}], ",", 
   RowBox[{"Show", "[", 
    RowBox[{"ThickFiberSingle", "[", 
     RowBox[{"0", ",", "1", ",", "0.5"}], "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.710769774384321*^9, 3.710769784298375*^9}, {
  3.710769845502118*^9, 3.710769859901844*^9}, {3.710791662384399*^9, 
  3.710791693129348*^9}, {3.710860664081027*^9, 3.710860690358453*^9}, {
  3.710860728851088*^9, 3.7108607341454153`*^9}, {3.710860768747888*^9, 
  3.710860797475995*^9}, {3.7108643088346643`*^9, 3.71086433066568*^9}}],

Cell[BoxData["\<\"/Users/Henry/Documents/Drive/ProjectProject/exports/\
mathematica_exports/fibrations/hopflink_single.stl\"\>"], "Output",
 CellChangeTimes->{
  3.7107698852669783`*^9, 3.710769946886537*^9, 3.710770070613366*^9, 
   3.71079173949454*^9, {3.7108606856126833`*^9, 3.710860690943192*^9}, {
   3.710860731525014*^9, 3.7108608198613997`*^9}, 3.7108643413260803`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", 
    "\"\</Users/Henry/Documents/Drive/ProjectProject/exports/mathematica_\
exports/fibrations/hopflink_single.stl\>\"", "]"}], "]"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"workspace", "<>", "\"\<hopflink_squareknot.stl\>\""}], ",", "%"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.710770195662112*^9, 3.710770234820992*^9}}],

Cell[BoxData[
 TemplateBox[{
  "StringJoin","string",
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"workspace\\\", \\\"<>\\\", \
\\\"\\\\\\\"hopflink_squareknot.stl\\\\\\\"\\\"}]\\).\"",2,1,1,
   27165185274401959071,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.710864293892929*^9}],

Cell[BoxData[
 TemplateBox[{
  "Export","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"workspace\\\", \\\"<>\\\", \\\"\\\\\
\\\"hopflink_squareknot.stl\\\\\\\"\\\"}]\\) is not a valid file \
specification.\"",2,1,2,27165185274401959071,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.710864293912994*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.710770239487783*^9, 3.710791747565773*^9, 
  3.710864293924988*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", 
    "\"\</Users/Henry/Documents/Drive/ProjectProject/exports/mathematica_\
exports/fibrations/hopflink_squareknot.stl\>\"", "]"}], "]"}], "]"}]], "Input",\

 NumberMarks->False],

Cell["", "Chapter"],

Cell[CellGroupData[{

Cell["More Models", "Chapter",
 CellChangeTimes->{{3.711068228666499*^9, 3.71106823112075*^9}, 
   3.711068275220026*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitFiber", "[", 
   RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitKnot", "[", 
   RowBox[{"2", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fiberThetaOpacity", "[", 
    RowBox[{"t_", ",", "o_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"color1", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "0", ",", "o"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"color2", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "o"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DrawFiberSingle", "[", 
          RowBox[{"t", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"DrawFiberSingle", "[", 
          RowBox[{
           RowBox[{"-", "t"}], ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Background", "\[Rule]", "background"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"800", "*", "scale"}], ",", 
            RowBox[{"600", "*", "scale"}]}], "}"}]}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"fiberThetaOpacity", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "i"}], ")"}], "*", 
        RowBox[{"Pi", "/", "2"}]}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "s", ",", 
       RowBox[{"-", "s"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"fs", ",", 
   RowBox[{"DrawKnot", "[", "]"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7110682865139103`*^9, 3.7110683585815773`*^9}, {
   3.711068456456402*^9, 3.711068458767996*^9}, {3.711068534114853*^9, 
   3.711068850325203*^9}, {3.71106889753456*^9, 3.711068899686592*^9}, {
   3.711068996075654*^9, 3.711069158801694*^9}, 3.711069235409341*^9, {
   3.711069297293339*^9, 3.711069312139571*^9}, {3.71106959228594*^9, 
   3.711069597285672*^9}, {3.711069641319837*^9, 3.7110696432545767`*^9}, {
   3.7111360850083857`*^9, 3.711136129893979*^9}, {3.7111361777450027`*^9, 
   3.711136183518402*^9}, {3.711136263221891*^9, 3.711136267225421*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mm", ",", "nn"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitFiber", "[", 
    RowBox[{"mm", ",", "nn"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"InitKnot", "[", 
     RowBox[{"mm", ",", "nn"}], "]"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color1", "=", "Green"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color2", "=", "Green"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"background", "=", "White"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"o", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ThickFiberSingle", "[", 
       RowBox[{"0", ",", "1", ",", "0.01"}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"DrawKnot", "[", "]"}], ","}], "*)"}], 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"DrawFiberPair", "[", 
  RowBox[{"Pi", "/", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"\"\<Downloads/fiber_\>\"", "<>", 
      RowBox[{"ToString", "[", "mm", "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", "nn", "]"}], "<>", "\"\<-0.stl\>\""}], ",", 
     "o"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvUe30rNw2WvHeWz3gkB0y43mCBDd1Pg9DkR/O5qb
DaKXpHwH023B50tA9KuOd2D640mJNhDt0uPWB6LVZBmmgWi7C4bzQPSng2e/
7ATSnNuefgfRcY/v/QbR83wKmXcB6azc6zIgOizYXBFEO93RKQPRu5gbK0C0
yZwpNSDapbOwAUTfSuGaDVZ/ShZMR94VOQGiZXdLgulVtkWd+4H0+dY/fSD6
2AKTySC6KN8aTP9IcJoNonf+4Z4Hon+/tDgAosv+hx8D0Uf+hZ4C0SeftoLp
5T8mXwLRK19vANMA3VOyhA==
  "]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0fXd8zff3/80eqFgtNatI7BhVNNyrRmOnBLFTtWdq1ZYqFRpErNgpqqkZ
SsR8XwShRsQKIoJEhizZIePn+/jc53n5Pe+jf93H4/k4j/N+3dd+nfM853wx
ZsaAcZY6na5ReZ3O6sNv+ODE6GFWuXpduRaHkg9p+qhciwtVHIs1+6upcWus
8gXPiul9otaZYg3yhqXHOs/71Kj3vxY+qIrlR/JfZTb869PLgnt9lZVqtCoU
Pe6Fp7d88XmJyPvqLTs3bPaP3quG9cTmlqUi75unb+jZLEzw0J/050+fLdDr
gk91Tf52kLbxpPP5Ly10RtFvwuM72Vb+7l2Zao+vY5XqS7rrIW/fMfAre4tC
zduvoo3r0VKtsMnyA1d1xfrwG/6NH+jytbFDwiM6ji4THPLzel9yarGuVItc
dOdcvK7UTB445F3bWLRorC/V+kxYM2GxTmeAfMCz2rHt6pYpHP2/OmJwftNQ
+b++JYV1Fg/PM/u/Im/CPV7N6tIjtUxzu9zOb0dkjrb5zf5f91jpjGj/xOEr
a+/R5Qpu3+f2gujkYn2ttF8qzdBlazfPn2q+X28u33aD66U9djoj/hfkDSPi
nP/qr3CXn06l7LFX+oHzd4PbRPVKCSnV31y0yMZNl6VVfjjP6eA6c/22Ff49
sP87nRH9A/k+Df3XHNyicBn3N80qPPz0qsw396lzh2wNUf3AesYmd97698/q
/0YVWty1SSnQ0J88XsCzSo5tX2ytM2B8de4L3KfvmSzygv/S6tDqh+Gaq9M/
Pqt1FqLH8G9OxPCHJwWX+WnS365Pn7df2qj5Gf+qYcHSpkbNqdIXSWu6KT3A
z9WL8QqYbSHfDR7/6ut6U29o1U/HzN+isxT5eud9lqa8uSq428En7S+2zzP7
vxgv/l/AjcV1fd0e/iPtB472xDwoLlq/UeG+GTs63ngTId8FnrWy4+puZWp9
AV+UUiWga2aZeXtM7TT20G8uSi6T9SXz/4+7498VKhzt8Rp91q1tdwsj95vl
jJlH2s2xMPJ4LRjV96qrhZLHeAEP2N8+Y/43aj3KuNM4yjyh/YfnCcbL227W
nU4WlkYeL+Dcz/UabOnffpOFkccF7XS13D4pwkuNr+wbNJ8x33jcIR/zR5dg
y+sFZnp4/gPncUf7eT2yvOwPc2Y2/Gpbqcb7AMtjX8I+yfsScN6XgPN3dyRb
NqqbWqzxvsT6sU9in+H9BHhwZFn6uacFZvOE92fWg/2NxwvnC9rDOPTw+pJz
mc4v6OFzEPJ8TnH/Y52azQc6f3n94pzie4W322cOUeHFerN7Qthn5x+4lOj5
noDzgu8Jcv7SPQT7DJ8XZjjtJ3wvMnjdqnzNvljP5/V/nft8XuO+JPcNOsdl
fzO1n/sf7Ty38Ukbl5ZKP+R5nkCex132Aep/GS/+v5Cn/oQ8/y9uD98Deb4F
XNjYadC/OXpeF+gf4C5dN+XXfadwzEPIB024X37AQaWH+x941Zrxnm1Xl5rp
gfy8qdV2Dy+n5Hm9mM1PE87zEP32X/OW90+ZD/+xr/J8k3H5j/OF5zn08/45
Men5VWerbL3ZfmvCeV8Fzvth9XlPzuRaZul5HwPO+ypw3j8xf/i8Rr/x+Q55
Pjchz+cs5Pl8l3Hh+4Cp3/j8Bc7nHXA+l83mj+kdxOsR7yyeV7x++d3E88Fs
/tD7jueVmR56x/F65/OF7+E8jriv8jjifsvjiHsjjyNwHkfcS3kczXC63/L4
4h7L4yv3ahpfuefT+oV+3k9k/dK+FLTfu/e9QvN1CnneJ3ldYx9jHPK+Sw7+
neRXquf1KO81Wu/AeV3L/Zz2DeC8ruW8oH0DOO/bfK/m9zWfa3zu8/sa8vwe
Z/3/1Z+sh+0Gul2GzWtu3dAbmr38pNOnUZrxVe/bdmXP9fV+SrrhYBcluC6r
1/jiOgr3rfVF3f5Tb4m8zvdJ5oErX+l9PIzbtpeL1+rtKhv4ss4zkRf85eSy
iLgnIh9aec/ZOWH3zPTgux55z4zrK77QG+esqva9dbzoCXbNnTV0V7Tg0s7s
zw73j7sruK6w2PLKoO1m/8u4uuKR6uWTNd13DUdm1okTeeDeAXXTD8TFiLyX
i//xb8+lih7Ie+lvN1hRnGHWftET8SzVcrfCI4eGT/vyXLJZe/zGHI3vZZul
+dj3Lb+n/0vRDzy+Xm+339fFix7gukDr1gcyX+pdgzr8kZybKN/1PfDy5+nF
d/RRttM2zfR8If0GPPRpnt+VjQmC63TXe/5zo4Gma7O7e22bZNU/v3zbNfKb
y3rg3pV6GXSLXot8vU8tx7avlqLkTXjwnjXP9g1Kl3biu1hf0v7N+pXnH20V
PLhR+2sbizPN2uPzpvMFw45U0QMcegwduuefinus14V997J98lO5lzp1GOia
Vpak5oMJRz/LfOjxMqjCw1CRRz9jHzbDN+3ztxq8W3MxGN2a6LJEj872fPim
v38TPHjMdK+l919IO2X+FLY6PjXpnrQH8sYIz2dJeZn62B2lOddsC9V3Tf8X
uE+iaxU7p1TBpzZuG38yLl/k64Wtb/Tvgwz9ibLBk1fZ5sp30c/QExBnHP0m
U+mHvPexmdWO9n8l8m0nNL2xdlSu2TzHvjcxbY/FLyH50g+yz/f4KvqX8HyR
d8//p4Nz3dIPegb/MEqXK/KMy7h37XlkYsZbs+9ad9y/2NauWEve/fqePuSt
6AHu1d3TSh/0VtqP/+VbM/xF3q44wafODs4Y2fmtzCvME+mHaXaTb65LFDx0
796uf97OM5tX6M/QwxFl1X3eSPvRHl2j13U7tlftAd7+B8cK7ZKzRJ77AfIj
To/v3rCsRHB8V/QEtBzTad5bwSP6dPkla9c7mVfQ72vVeFR+qcIDPD7RH9yU
LuPlvTJ9RaCuUL4L3K/F13uC5incvnf6pm+fl2mQh36Rj0orWOVVIPJuZ5y+
KR71Xs1zUzvFfjI4revy5HzBzeaDadztNw/dl9r5ndm6y4reH5Q26qP/e8y/
SbsdxTIuGN+sKu8tna0VXs9mZeHoOvf07kXL1vSw1Bm6dannfmeJubz/0BdN
7t8ulHkIee97C6vEfFKk5udW16fDypeKfuxjkE8ed2jozX4Kh/56Q8uHJtd5
J/MK8n2e/3QtIa5I8Kz+P/T8d0qh6Md3cb4Dx3kBPMbQ+9ar20oP8OXRd2tb
HFXjgvbweLnO3XJ5+r+5si7Qftw3ZH3V7fXrl2435B5y/9wntX5ZkiPy+G5Q
fNbXf2XkmekxRlpHremXK/0P+dCZfaxCl+QLDvnIr8o+OTIq36wfmh2NWHQ1
o0BwyKN/ol717xaRmSC4v/7miC80tb7kHvX5lKj2ejXPgcu6LjDeaB2SJd9N
6L3l9xp6pQf4vrvOLk36l5rp4f6HPPRXP5Q4pW2kGpdwp13LrsQVSD9gnvB6
h7xPYexu49oC6WffWd1DUoI0Zbeh9QU8+PqibtPb5ync9C7gfRvykakXW3f2
e6vkzx/O/G7QBrlniryh/M3KB9aq+yfktay09wePyn1V7plZtUJiDx4WnNsZ
cqJdRqB9oVl7Qn3+/TbU/Z3eqSTVZ/RGdT9Ev3lcDj286cRLdW/EfcPz4B9j
TsR/1D//mz+QBy79OeFoql9bhUN/PbfZsz2256h1QfMW+wbWY8wax5V5jh/d
i0z6+d5iWJk94XZQsey3wN2rjpmQ4F6q7jkD59TZdfBv1W+Qr9Go3BcH/1C4
/TXf1iHqvoRxwb5dNa3ST5GfqHsIcOmfzz7vku1VpnDTuMv7MbPhv10zHQy4
HwZcu5w8ySpKi2q463p3K0fBfb8L9HH7PVTwmCU13pVzSxL5qp92v/vNbqVH
13Rdp9qW8SIfb9PY7vnwBMFDXcNa9rBT+tGf8179/OXgvxwNuPdC/9SO7T2H
XlM45KG/feN2ITVqKT1VHbc07jfkI3nTd4vvzHrS0lm1s/3Mc7+tsEzWlgeN
22a44yDywKEfuLub85IxAxK1Wo/iM6tUtDdgPkB+nt2yz+suVbh89+kXy2rP
sJfvhsfmJs21yNLs5//zdzM79V3g3ictFzXUlB70Q2z8mKrOdz7Sb/q/uZ/E
nB1yytEg68X03aqlyb94VywnOPQk/9Rjo3tdJY/271s517uns6MB8we4i8fE
esPuKBz67Qf9ffzHlko/2gMc8vhu8cFJr8b3Vzjk21ay1rfWO4ge9EN44t79
ri0dRB44xgXykU22WmxqnSI45JOfn9+zecBHeLujI0LnPlL/96DvkMpldtL/
nr6/lz9okastDws6X9nKXvBFhUfv/Z2SI7ih4ruEGl/HiXytTDd95i5bkc/6
sn6r5xaFmkvQok/SlthKO4GLHvzfMUXVDjfO1Twb1C22mmEn44v/C3ngXoNt
F689niz4vFUBnQYXvxH5to2911a4Yyf9gHa2/W7DseeWtoIXv/5iSOz1AoWb
9h9uZ3CV0qvHp1w26x/oCVpytO6++Tmad8mnk09Nt5b/BXtdrfepr2Nf24g8
9OO7kK/1LmBPmkORlvBozZ+HLK1F3uDWsKv1k3eCx9e9nnfgzSXR33Zo9eYR
GdbS/4Kb9It9o3FYQc5WpR/f9V5y+lXNA8WyroHz/8V7BPNfxsW2+PT4229l
ngNv75EypE8dtT8Axz7gZlGwPqDorZpvpvcU1oXHjwYflznq3p7s2MD/mM7a
wPf56sVPAo5XVfj0l131eysqeb7P77gUGHA+TeExv43bcGDlR/pN57i8Qwen
2jfySZNzHLh3WvDV+q5p+ok5a6ZX6/1Wtcdkz8S5A7sc42KXe3zi3u59ltKe
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
8/8FPiZnU4Umi3VGtnfx/4X88dhZN767onDsP9MrzCk/+JmVke1sTxrOctPX
/jAfxmxY4N5b2SeLDzjk/mRha2T7pNtoYx2fZzZGtk9Cnu3G6B+2H6bdvNjx
l+Z2Rraj5nvvKPfzOFsj2yf3+AxcPH+TrZHt2LwugOdaDvhhYne1/1hfC014
vrbIrN9gP8d8YPs5cLZ783fF7j3p1fWRc6yNZvZPi7mzfziv+gF45Orm2yaN
tDGyXYv7DfY3tJ/5Jxy/g/nf6Jht/37drYxsD8d4sb0XOPNy4W/l8zqgzrZJ
wZVTNeblQj603BHnRScUHxh+Xj6Xfff7GMcFJmp87s9LfTrFfcArje2xumEn
AhsExot8wosZIZNKlR+Z7yc+Bz/bm/rqscY8Yciz3S/ksyZhy7OTBAcfmPWD
XwqeAPM/GQe/CP3D9xA/67OTZx9/rbFdNKhL2JhvBrzU+H0U9br54OMz32jM
g8V3mceL7zIvDn555ps1G38s80yHPI15cSJPfCrwBJif5lZBl1Hc853GvDjI
M+/r/pfOVWpuK9aY9xUTurlyq16lGvO+MP+Z9wWc2+O1Mv/Z6lVv1f8y8dvR
b8xvl/4kHjtw5v+Dt2DG/z893jO5yTbBwX9geeGxr1m91mVfnMb8QPm/xCc0
w037A/qZx7ft91O2Pnco1PidnvzC78jvW99q/E6/2WxshdXz34o8eMuYD5BH
3Ctw5gP4vZq0+PbpfI15FK459TKjUvI1Mz7GtC/2PhxaoDFvnPWDF41xYb43
eDLMl/D3ebwoYZLCwfeGPNvVZyae8WvxQJ0XsJ9z/6PfZrvVXOr/t5pv4HWj
ncyjKPR7dOjW3/mC8/814zN82bjf/MpJGvMieJ+BfZhxscM3dKx9rnWaxu+a
8HUDR2szFY757PLvNL+u2S+l38Dbl3bSu896ot+7FY3fauwHiSzpHL4sJcuM
n8PnoMQLO/dv3ONPdQ7CjwZ5fofyeQe82bTte6esUOcv/CyQ5/Nu6ljPxOVz
7Ix8XtgOvPjbwvNKHuMyIM5z6+pEJQ98gbNnuWWd7Iz8nr1R7Gnrb2FvNLOD
tU+a9HuenZHtVJBnP6bgdA62bexa6HdF6UE/GM47Xl9SotoPHPcxtqdx/8Ce
JvcHWtcJTs1f/5hubeR17d1rzmuvatZGtmPsv73T2e+kaqf4zdfv7LtisZ2R
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
cejh+vLAY34bt+HASlX/HXq4Ljx/F/XluZ07LgUGnE+zNusffDf0crd2Z9Yl
izz0Q376y676vRXNcRmv4icBx6taG8K+W1SSVktnZB4F9hmuawyc6xfLPkn1
vrG+mEcEnPlIbk7Tz5dE6IzMR4J+rqcc1rLekUprLIzM18rw8rzcvpqVkfm9
+C7zcqGf698JTnVmeZ7r7u+7u2Wi2m+ZJwY9XI8VuFnd26ED7ncISBf9mM88
jn5RaQWrvAr06DfmfUE/17sEzvU0w08N/OL6ebWPwQ4f5XBPu7TY3sj+Hdn3
yN8EnP1WWYWvVvz7QOkBnxzyUg/FhNu3sXuQYuOo7r0m3MUlc3qKxUf47Ca5
2twwPfD2jduF1Kil5Oc+brXpVAX1XdgH8N1DGRUH9G2hcKxHGcc9V+v5743W
sH45nxvkOc8e5IG7jqldpWWD54JznQ7gnP/N97LHm2unbmicvw7ynP8N7eH8
gZ7REUvvNXQwsr+pcu6enItz1P0W587U8sm33w5yNDLfDP0M3BD+MvLGjETB
2W/l0uLqt/F/OhjZfxfhtqqo+IrSg/Hyf1+48d1hhUv+8yHvhti1KCfrBfJT
dR2drT9RuMzDbWH6hFsORuaVeS+07h9lo3CpK/p2rk9Sumqn1G/FfDs7PqPC
COV3C/pjcbufMxM1zmvn6nSsiUX/FzJPgGNcOE8g1jXndQTOeR19bFvaZqyN
1zgfplNihzqe6xI07k/omXe/uHfp8NeCTxyZ2e7tkQ9ylJdS5g/eESZelv2h
uzPbeKRrXC8G+rluke+FcQNGTdNED96/Mv+5rs3U4+kV7rwQPdwerqMEnPMZ
zptr2+RGyxSN9w3s27K/6W70C6n2h+DBjdpf21icKfKyHinfI3DOr+hb7kzs
qth7GtfZCY28U37ws6ca53sM+fLkLOc7LzWez/E+OUs/a/lS47ym4Tdzv21w
VOHcTq675L5p76ZWt9S9GvP20PTl6zrUtvrovv2/9Yjzi+uV8/tI/PslA3TN
Nin9aI+cs1QPfdTT2f6duqvvYj1Cnutx45xCe+T/mnDky0U7gSOPH9qJdzrz
NPBOAY64ReD72v1tveKC4gsBZ14H7CHMDwlPKmdc+ky9j1gP1z3HPb9q7UnH
zo8qMMO53jr+L/L6Aoc810NnPby/hTZOaB6er/jGnWdv6ZBW29HIvOXiVdds
0hs6qvuSCYce4c2a4tOBc71m/yqDEh50cjAyH7hycm7v+80dRB54r0qNf3h/
8iP9pv7BucB1t5cNOH2l5NZH3zXJDz5yxs+xn5JH/+xZFTc/6IEaR+E/mMaL
69fXOtm58rZEJS/nF+YJ1Z1vm/nDD+HV7I3MK47tcnfMplUlGtYF7mP7qu/s
O92iWPDQs/Wf/XFT4fPGPYqL31VkJo/6gLivZh085DH58XsN+SqBT7W7srK+
Q5Hg0GPfMfAre4tCDXU3GIf8vO8fb9vlb2mI+rz/wf471f4m9gra5xHHJ7ip
nhrk+bzgdy7wyNSLrTv7vdXzPUre17gXmeqO4f/yuWZYmT3hdpB6/6IuG+Rj
ViV6OHcokv7He6rYM63uhNPvNYw7cPSP1AVwD4w9tUjhkD904lS5S91sZLyA
o64xcP99fTssapEj+tuuvh27cFWx7PPAIS95+38Nu/5PM2tDwoIOn4RF5sp4
QX7i8JW19+g+7FOmeisYX+AJizL+/WRdsdn/kvvzlobVIqbaCI66J/zOlfP3
u4YjM+vE6fncxHrke5F3QN30A3ExZvfwYNfcWUN3Rev5Ho54VT4HUQec7w/x
9Xq7/b4uXs/3B7SH71dY73wuA+f7nsTb8rtgxA+ZA+pE6/nexf2Ae7sZjvuA
KY8ZvxewD/N7AXr4vQCc7y1YR7gXSTs/+7xLtleZvEOlXkDVMRMS3EuVvKl+
H9ttwKNj+5Lcf7J6jS+u81zP9yWpR9xgzCS7ogLpZ56fwLvNLhtyrNhKcNTD
hfzsoBC7bkPfyXd5fwN+s0v9xjtGKBzzs1nthj9cKP5oHZnwXKdG16/H2ggu
dSLiG6w8G2FtcLKLfX8rPE/mIeqMQ95rdcc2zUekmOGQR/1xrHe0M3f1F9s3
nLAQHPNH7O2rT02Melwm7eHzAnWNGRd7xcCTK/+saiXtwXf9upZW25ug7HvA
Y8dMLfqrm9VH+P/qwPI+gzrOGBeZP6Z6soyjXh7jsu7cNnS7PMLGkBC4aeR6
rxwZF/Qn5FE3lnH0874lzolPmtkJLvWS6p92vrfR1jDbac5Gf5cc2edZj9yr
rZ1bPTincNTp4/GVOlAdnk4+2Uf9L+AJdSz6XVmu5hX011vVKyAywsbgMnT4
tmvz8uQcYf2oV8W48JBN88q3sf/KcX+/l//L5wtwPqdcrB/UbLUjxWxcoN/1
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
Z9moCdPeVHNU40Jx0HI/eVxj8fhd91T8sql/pF5q/Mp2Wd2VPOcnCUh9edwq
KVXwrLSv4p6tcTCqcfnfvt2r8YrQh90dZJ+E/s7+OX7XDtsLzvk3PGb1OLj8
6kvB51580D12sdKD71aO7bHvdaKDjAv222WTq1V7PNJB7j8cxw354K+2D47L
fC045BFfKf56U50R6Jl769f061fsRY/Ev5v8/tCD/zv3pPOujK8ULv/L5H/n
e6BhYsr60gdKHv8XvAXJh4n47p+WNTnfXeGcrwbtjKyRtLJ79WzBoR/3apHP
WL1q9Ph4aY/wgfHdKhNGbxn1SHDf2uO+yH+Va/bd8KJlNlGzstU5bsInNh7+
wPJEnrTftvePDa5sspf5w3lsJL+riccu/GHUje239bdrLRMF97a883ntlWmi
x6f1pekPYx9qnN8e703Otw+c8+oLT5jy24s9gfLqQ57z3oudmfLq490qdepz
K7XZv/e+6AEevKBm1+pjn4k85423j11VKXVGqsb5jSHP+eGTQyvbdApN17hu
uNgrqK692Gco/z9wzksvdjxT3njOb4P5iflTOSqouHCnWqdm+RBQ34ryhHBe
euBc1z5h7/g+/dKtjHyOSLwA1RsVPj/VG8X9E/LzwioUjSzMEXmunwuc6/AK
/x91vjpnVNkeovJucb1guec7pe573/u+nvMicr1gyMt+eKttnUXu+So/asGQ
R9FXVT8IX9pUn0vW48Nav/l9ZWvkOo+Q57qNwq+metC3v2hZcVcFOyPX6Qi/
c9RnX1+Fy/622DX6wBo7I9edBI+X60fb/qjNCm5oZ+RzGe1BP2C8pP0LKvkd
9H9uJg89MWPePJ1nn68/1Plm1rISGyPfhydP9So/epMaR6lzlH977o4SWyPb
E6A/NKX9+WYr081wyONd4326Y+eAWvc1rtsu+xLVowfO9ejdx7hef/fJC1m/
HL8j+f9vtX5VO+qN6JH64/F/tGjhlK7nfcDo7rgno2Wy6EEdDY7Pgh7kpQHO
deF5n0R+FbkvIS99oHXrA5kvVfy+Cc/Kv7DufsvXIo96HPx/pS686b0MHHY/
ts9APvhE23/aBqSr+D7UBYAdw9R+qR/h/7Nfy4nqf0GPzzSHP5vYq3GEPO7z
cr7gHWGS530e60j82m1Dfk69pPZz8ROZ8vzL/fCR+9L4iqnyXY7vEztn5PY5
TatnSTya5MknebErmuQlHwW1P6tc7bWPqudrXLdd7r1Utx3vAq5HD5zr0UMP
12d3ylx6KNulQOP679AT8OnFkzfOmOMYr3oT563IWZcs+oFHjUkJ/jzgjbQH
9R0w30Se6ra7th5ov3BetprnpnZCj6y7lDiXnZkvRA/Xo4c8xitgcKp9Ix/1
7gOO952/5fK86n+r/yXrYtSK8IaNi0Q/x1OLnu+HN+jro965qE/B8xA4j0vx
qt+vx760l35usKpKhyVB2fJdrnfAcVvAOT4L+fA5rkrqXVLcFnCOh4J+jsNC
fn7mbwNnnjZwjs+S+i8Ud8b/C3wGyDO/HTjyxErdXpMe5rGjPcwDB858b75n
cv4W3G8Zxz2Z80/ifij2WLq/Aed7O+uXekb2PTcnjnqm5/uz7zL9b7N23dfz
vZe/K/fehzOe+R+N1/P9n/PM4J7P55rHg9ymM8a/MLuXos4j58+R++cKiwZF
cSqPkNjNGj088NculS8I9WfN8t6Y6mxy/0gd1WFBdc71T1D5hWC3nLm535/r
VB4h1PGU//XQePD6iIcav0OzEgctWFc7TuN3rugx+Sn4vYB6siwveq4eaDV4
VLTSY6p/zecL6lxzPmTUs+a8ssA5LzTqd5vhpnrcZnm6THWx/wvn76KeqdSV
69Hv9ypOaRrbDcSPabIzAEceRX4fRWWc/XZC/0SN30eIZ2c7g1O17HOOR19o
/G5CvCrbT1w9oo42ikrT2H4i/Un2E/Hjk/1ExqvVd/17b7klegotA/e280nX
+L3v6uvX71lmisb3eeiRdfHnrMVnWiaoeHaTfPzuhKAXLZPkfsv2KO9Pf7qx
YX6JnF/QX69eTsb+DqXqHkhx8ZCPHz4/vXRGiuCoD8V2fqlz1LHJN6cyVfx7
vWczBgd1U/clzB+8dwIKd4/6zOON4FJnxOT3Ef+7qV4w3/+zBjvqdyxXuMS1
zZvR7uQwWwPnzUCdLMyr2KHNj/vUKFb3Csr7IfW/4kJ+0O+KEhz1v8S/c2aG
3coiJc/2BNTN4XMB9Zd53MWO3X/BIEePVMHFv2bymwBHv2W1Sje4O6l3kNj5
Tfc34NBTb9mQ5XWzVP/LO9exxdOEGWqf53ex78Geu2vtfKzxuxj6xa80cti5
LgEZZv4sjtsFPtut5lL/v99q7L/jeAfI+73Y9dPjmRkq3vnQm8gmE9L1zP+H
fFD/1Td2pGRr7M8yjO7itrtGjsb+ei+vu36/Fqn4AsFNeW7ZL8nfhb+ecdhV
mG8Pez5wtqtELIqp+nhVgcb+buQ3YHuO7+B3i8Md8jT2Xzgd8+93ukaexvYE
2PHY3ui60vKZd+tEje2NkOf3Pse5iz3TVCed7a6QZz8yx7MAT7Z8sr1V4AuN
7TYsL/6jck3rBESr+HGpG2Wqv8l+6nmT5kTuyk7R2G4DOxvbgYGz3Ybjj4C7
ruhQ/saPjzS2G0Oe/cLAa11MO72yufpf+L8x7dZczputeCMcFwO8ljbm7bzG
Cp83rvRe89mFZusL44X1yPZz6GH7UvmB3+47UJSjsZ0Q+S7gf+c6a2yvC540
6Xpkz3yN7XWQZ3sXx7MDHxFWs01gDRXPDnsXx+NAfmJZ3ZVXHPI1tmtx3BPs
kMDZvmq2fk32SY6XAf+E9Yv/4kl9LenDe5Xtom4VdBnFPd9pbF+VOCD235nq
ZAlO9RCZJ4b5zHwwxkW+x8juxr0PNeZ3QZ75YJxvATwuzs8APag7z3wwyDPf
hvM/iH+/pNcpr8AEjfkz4cdneA07rnDwcEQP8am4ncBRh5d5Yhy3BXnUI2Ce
EuqgMR+J41N4fNm/jHqL7OfFuLPfmfVz3TT2L3P8CNc3ZD6S5M0gvg3H2YFX
A5x5ShxHCb6N1EcgXh/3P/hLnH9D+E4Ovfr3Pf5KY54SzyvwbRjHfos6hszD
QZwI83CC28+feHNmusa8GolfI94s8kAyP3Zs2IbCyJs2BuaFijzxvZcfOROa
qLMXeeFLP9m052WEneDgnVZtsKnqk1p2kodZ8kl2tSqMW6Rw8IdZP3i2XH8H
7Z8dEj7rVgP1v4R3/a5070F/K8EDju10HTM32ixfMfi3Pn/03ZO+w15w/K+I
9Ztd30y1l+9K/KbD2YIUT4VLHhvnvhlJzZQeiU886uKc0s3eLE/yCF+r6Bcn
7ASXfDvhMxLveNqKfvCcMS7M00a/Md/b3jGs2pFzVmZ5d120J2FHY62UvIkX
zf0D/jNw5p9zXSeJLzCNL/Oc7QPOdE1IUDj4zMhHynENhdN9ZsUUK1x4zp9t
XpRYbGfguBXuB8SnAPfNXDPMKUvFa/C6QLwGcI6nAB6a+WjXnmcqrgH6OW6C
cXzX/odNGbGeatzBD4d+9vtLXWbik2BfYt4IcOa9cH4A4FG90xpv3XtPY94L
5JmnwfkcgLN+8FUgz35tyLNfW9pPfBXOwwAc9S+YN4L7KvNA8F3m4bB/HHx+
Xne8LzHfhtsp9qjp1od/zn6tMX8G8syfkfs2+SMgz3YY1OlmfwfqTbO/BnW3
2W7D+rnuM/MhUT+X7UUc18z1zdlOAnm2RzGfBOcm3olsF8J5ynYhiRMkPw63
U/xK3y/8ZObeKI39aCzPddXZHwec7UgcB811w9mPhvrgzJ9EvWD2i6EOO/vd
OF6V6zKzXQjzBPKhw1v9dqaKqu/MdiqOy+b6y8yrxP9l+xXmG/NI8X/ZroX6
3Wz/LIzpm7mgdZLG9n/vDRZzBg1I0NjehTrU7J/VOXb2+NlBxR0zDvmJea4d
dm5U881wfUj81ADlF+Z4VdYj95aFmz22eip5+KPZDsPxBYaRc10PRKdqbJeT
+GKyy/H6ErzrllZLZiZp7B+JOli2r3PgS43teKi7zTxe1HFmnkB4+k6H24Hp
8n+Bw97C/AG8m5iP4WK7o8OpaDVe0BOSW+F8ynE1H7yfXjs0d5ilQcYF/rKy
JV39FliZ4dDvXqPcimuV0zXmS/A6Aq+DxwX+a5d/p/l1zX6p4qPBM3F1eT2t
9WstYGSHhb/uuKf6h+LcZV+leQh+CMsLv+J2jR8XDv2wfkx+BDkXTPLsv/ZZ
HbHg9cxMzaOcT1BBRry0k+cJ+qdwSFLvu9GqfxbVPzXp0Wp7A+eRAL8C+x77
tTn/BvCQ08/LzY1+rTFPQO5FxJeQumzEH+D8FeA/MA551Ptjvof/2Kh6/6+s
Kw2K4ojCA6sWKgpBRRMJWRWUDcYgrqII6QFEqIC6pDwQo+IRJYqUByoBNMSD
qNFgEkqQoOARBY2KCrIg+kYF8ViBKKXrgYsGBcFjYFfYg9nNpooeqp5/X031
9PS87tfd7/u+l/Bxt5+IcaqrrjrO+2PdD1xHHuPVaTv0eVxfHvMUxP++7aL3
zR3duHRqx/wscV/h7ZdefaObN4Hbx/XfMd6e1p3H+HxaFx7zCGg9eszzwn5I
7XYRGzOLznXHO1xvHfOt6PqA+V9YB0bEV3ftWzD+H8dTXI8e8x2wnX6vvmhs
u6btrTgOYt5KmjTxX+/u/lO+hngvh3Ds9L4F802wbgB9fkj2VH3dqw7AuPoP
dAa6eCVYr4PySsR7HsQvwPc54r1913/HfBb8Xtr/JsfTkj9kbYB5hdgfaN6c
2jG/AOuWiHnkhwH80Z1awDwCUdcF5YXpOoDzpOK+FOVz6bkD52E9ZErvb5wa
RH1FfI7DOAdGf6/Gs+GpaKd4Boyvpu8tmLjp6Y4ldwHnwTGumOIKRL0+lB+n
7eO8Nl7naT8VmXlzHh1Rd+uQdOEraDsY/4DPUxTvgftJ8Qw4/lLcBY6zFD+A
9T0oPoHaMX6Ato/xBng/RnEUWK+G4iWw3iPFOXzwfBeOgs5rjLvAdooHoN+L
cQh4HPC5EveHjkNCXtILy1qejHEe8+6vyQznkazOSb9hPS9qnpw50O8NYbeP
dT19heHqG1PXN24zk1xWldjzJE8ST7YePT6H4aTxW10uR5pIyqBZcZEtWpL8
asDeoHcWkHuaJJvtGTa3xzL5oiAdiZx/3jWg0gIxLufsfpQyLFvhL3vvYCRs
VLJctw/Ao+3V5V29bFg26NlO+dY2krKn89GW2UqITew8t4e1YTNnzfhtFegI
J9sX5Bp+C1z2yIOyF9iyeraoV9T/8SY0MTTu8ApQHPpnmVFvIXmpV+8NqzER
Zu3En7X5uyHUg8j0KgtxrM5q6RjOkylZzICgRgsk+DmNSpfqideGjGtxt3WE
6hQptE5F2Tf0hL09UGg5byAKXqmRFguwN+BkdYPCTNQOy0deyOgg9S0H5war
VGBriE5jfWy56MLp74Tl1u96Pt7noHMpJEu2+Y6pZrjcPv52kY3WfmYFNPvk
p0BN+fF1bg5WOxrPQkdlZZ8oE3hUpkiTQt6T+CrwH3vNDJu989PGL7Th+CMj
NF8v0ZLsY7cDJi+3QGZgRtmkszZc5Hi+mZPoCdWlEXF0Ew7kzu3Qkpn1BWFT
TBbIlYSVOLWbgM9Y7zN/qE78X4WkzsWp2QQ7jMatBm+eMIeXBtbm74LkeZl2
wXctsHpOcbPkqJHYqTs6hy4X4EZaeKD7YgGim+sWnfTsIFzuCl2PwTdFnle0
wn2dg0MrSZEsJMaVBaQmY7Ci1l4g0vujl7wuNhCGKY45+LqU5E4f8vRJoUAS
YgflzOurIzTuyCNW7tf0tu57On+ImFxp9YeS7JGy2PPEbopk1YivBAiNOeZm
CjMSJjEi4vDoi0T905pLslIB3E596hWymgfsz0o/1TJG0QLSnJEbzjxgOHWc
zudFpJkoguMqwvN4wP4c6ndZ+XxHOySEXXUck2aGmQ7BxtQyhn2yySd/UqsB
UuqfhfGzARL8O9W77Kzn8u0xTYuSW4EbsLhts7MSyir639kTaN0PDuy9Rkjv
AOonyhPXJ2VNsGW9PulQ5jRpAc8Xx/ezU16p2qEp9qWP9z0zZN5/Kz8sN5Ca
R1WnxhUZ4HVGoOuwiwLwJ1L/bAg3E/1Tf4/0eC0UvE5K9EuyAPfZ22P7d3fX
RRL1l7rqf/lZsqtYL2u86/q/TZeXzNfXWEhD2QaPiFoeoipeduatYrgt01qH
y1Za/TOvQvZ7tBawv6lLDryri2yHIaunD/dcaIYtDzSScV/YcNyLvhOEL1tE
neEyVbiLR5YAeJypn8eanOvlVwxQ/qvm4bBKAaRnSt0/vypA+aKQTW907WBv
mJovN5lBGeVe0LPdCCpf0pKr0wL257+D50Qc0muBrgP1/r2cQowWmPnLUtfv
75iArgPq8nW1U6osEBrV+riwTAd0PVn2uCozcKEt10M5fl9IvHV8Tvk2a2cd
BLW/79mRVj9yLOEnBX9nBDyvlYxL9pbyNqD+mXC86sp9P4FQvRfqn6Ev/Jzq
lAJpiF/sC27vIWXombuaC9eJYsIgVfETI/FS1tb1fsATPP787vkfHZ32htx6
2cft1FmGczOM6u++QADqD3QeyVvCd8ouCOA4q/LSbPtWoPPuW3m4SdpfgB7J
1TOO2Fvj4bU7OTEbq4m6Me2Opp8e/gMf0CQQ
   "], {
    {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
      GrayLevel[1], 3], 
     StyleBox[GraphicsGroup3DBox[
       TagBox[{Polygon3DBox[CompressedData["
1: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
WWlVvsr4CHcDrIIH8d8PdWWnyW4OW/7SV11U3nL0dsBn0Inwp2EA3EvZjaB2
0u6VstkWQnONLdSCD/GvgxVwk/ZBKAPH8Z+B83AsbXortC6QV8oWdvmLkPlH
Ib8K49MWrvhBIZPlSm808hvwuu6H+HfClyFrl9o0zdsod7rLci+gMybB/MA/
Cjcv9WsANyft3nKrbDbNY+/zxknrj7+9T/a5HX4v6Y/DiZC1rwpp7oQ7oD3h
T8q+gz7QG3pBJ/RaQ08YiL+/9+0C0rwN86A7/s7QFx6nfvkhX8LKOu59eNzb
MhUeQX4UmqVNbgwPp22c7/Wxlj2TD/JCftjsNrb6RP2heaD1lQuywpa/ylEZ
kmcF1s4LHqa4UzojU1audFSXmdqDfb597PVUmNI38Lo1h79I99+UyS29/uqr
TSGr20YYin+4j+8W/Fs9z36BvUXQJUHxTBuvv2SPErgHvknaeaoz9BAchd/h
NyiJ7kC4SesK/xxYC4Pw94BeUBDyQQEoRv7P4HZxWe589GdDd+iSNN28rq8z
oD/kgucDy7eXy7KlZVsv8HJnQU8vV/aYzv0D8K0aR99cSZqNp/qW9Dl5nUX9
m/94qAHVA7NNVIc8ql9g80lz6RTp//C2K3wRLAxsH2iiMYG9xNWk/6rDEfr3
NzgUsv7cprWetHLG+xqX/m7YCT+7zbwf2pLmBagbsnzWai2HrL7X+Xjp3UZv
Sg/Aoz4/62gPJf0a+AS2wmbYCCUyLU7hu7X+YVfI3lu2uM4x/Ie9zjXJq4X3
yTHfW77wPUfuhy5/EFicZO1D8p9VXknbc973fUxlaU1rbT/s8209Oi8in/Y9
TfvwSsLW+VySjubjepel29vTyu3jcp+re02mtW+ut1dz7FnYR75fw96QzUmd
XcVcX7pdXH7R+69iYHexmzxceShutven5ttnPqafej/P9b7VnvSk70uNaH8H
30O0Np/SfRfW6VyHX1L2RtcHemtvx38Mfpe9SvqcUDFkttwiWCBbn3psglsI
v6j9JGJz/xlfR52hFXSCJz3Pk3BCtgXp34ZXMuwc7Acd4WviDsC3spld3g9d
/S1OazPMpDui+1LCytU60/3nG8K+97ZcR19dxp0cmLwOvdVpkxU2CbbgXwrv
6CyCZbAZrqQsrfSVbu3VtLRzP+kOwEb8G2C9bAC/F08nflTS7l+jk/am2t/P
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
wgphewcuC/8DZA9nGA==
          "]], Polygon3DBox[CompressedData["
1:eJxNnHncVdP3x597n+eOTySzSho0aUJRlJJoMFcIURlDo6kSlcwqqZAGokKh
gVQqyhCaRMbSPEkRUcTXUL/P2/r0+vnj/Tr77rOHtddee+3hnHMrXNujTfdk
QUHBr6mCgiJdq+tHDdFKtBS1FFdbVBOVRVWHTyCtmCqmiSniVbFHlEkUFJQT
/yhcWtdjRVlxjDhFZXYUHUS9ZOQh72tiujhaaUqIo8SRopPSbNP120TkO1tp
zhCniEbiAnGhOF+0EjuV5h3xk/hRlFTcIeJgcZCo57z1xanibKVpkYx2096M
4qSKAnSSFm0UuFhcIS4TZRV3LG1EVpdJ2SVEsbhMtCWfuNTlUF65gtDvp2rH
Vclo1zWiWTJkoO5zk1EneZSsoJR1jf7rWOet3NbWooX7pJr75Xi3Df00dhuP
tqzlxZEFoXN0f5poIK4TKxIhF/JsSMRv4q9Pho5Psd4aiuN0rzl61fVg0UCs
Fm0VV1/X3qKDuFo8WFhQ8IvybBSbxM8FYQeUUcb2MFxpRogrxRUiJf5CAboW
iRLiIFFKHCI6i5vFdcp7g66PiSFisHhCZEVOZETa15TL4ndJUSzy4mCHD3I9
xP2jugt1TYr9Co/R9UTVVVuMVri666CsqmKUuF+MFMN85fdA8YBlGuw20tan
nIZ7T4qh4nHaIzqKv1XnvmTIgR4WivfELts0+e6QLL0SkX+C4m4T00RD/b7W
ZV0jOonmooVoJRqLs0QzcYY4W1xu3VN3B3GZyyDv9c63XGV/nIz87Z2HtJeI
cYp/HjspDL2dKp5LRjztOF2/X9B1IjZnGSjr62TIgNykJ19DyzLCekGmvuIu
0VW0Fr1pv+P6Oi36fdR52lk+5LyqMORCvuniTJd5ndvY4T999pT7YY3S7RGb
xDpxtOKOtK0cYxvBVg4VpR2fd5j7A8TdlhP5+juujbhFVKItKreLON7xA5yW
9pUTZUUZcazD5cVxjuukfr9VPKLwQ4UxxhhrxPP7VZU7JRl9Rt91UfxtiZCp
p/ORn3B/28bUZOQjPXbNWKlSGPZd3u0/2jL0dFkD3LZflO9d+1x8bzXnLWf5
GQd3JsJmsd0UPi4ZY4Sxg65/Fbut80GOH+Y+ne/7pHvbEKaf3ieciDLJQ96f
PVY2ix3J6Cf6C99xWGH4it8SkW+Q448Qh/s+ciHffZZ9sPMMsjzZROQn7jHH
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
0e2+OxXnrANTMZYbuf8552GfdAptJk420zgVZ38LU3EOzBngl+JzMV98lop3
B6fKnnoq/EUq5v4Vuq5MxRrgE12Xp+LclvNa7n3i8MrU/5/hrvJvfBlrRNaF
013HTMcXet5grvg0Fe9aLHF5lEsc95hPlvg3vm1ZKuLwccg9y2VSNs/KP3e7
eGbOWm6EGJ6KNR1n2tgEtsCZOOtC1of4RHxj31ToFF32sV7Rfz/Hsa5lfTtb
zE3FOfkzLvPAmTtlM3ZGWQZkYY5h7mSdxfr30VSst7K+j+zoY7jlHSoe85Vz
9sH+fZh9fRWP76XuD3S2xHpZ5vh/del9L2cvZzq8yecy/8al4hxti/fbm7wX
55yRNPgx/Bm+lP0wfhUfWM5x+D725U1S4QOb2OawtYapOIfiPOor17XAe/lT
nJZw/2TYKHH4/dNdB3U1FSWSMc/hd9nns19n385+nz110nHc492MVV4L8o4G
dk/+ppapvnWI7pjfmDcYE5yLX2IIc+5+qW0OW2QcYJ+cm/I8kz19yrJSdgPL
zJkoZ6ONknGm0Nj3T7c+ylte0lVwvrznbmRj3mUMM3Y511jlNcImt+kO++Bm
6XgndW2x+k5sFevETHGpuES8KWaI2WKymCRmiRucZqbvvSFecpquopvjZrsM
yvo9L53r+qLzEf+C6CEGusxZjuMeab9UnjVZ7XfENrEoG2X3cFrqKMhpzaL4
TQpvFndbhtmW/VUxhd8qa2Y+whPEF/mI2+byd4jtYiNlZeM93q26vqy0r7gM
ypqpuE/FJ2JGNu5NdJmkWWRZvxcfZUMvE13GZEP4Zetzu+veKX4Qr7kNyD7d
aUj7rlgo6inNcsuALLR5vVgg5hTHnhM/NUDhr8inNO+LDWKL+ExxvdXuO8XX
Cn8qloslYrHzkPc28Ulx5EMnW53/+Iz8jvKu0L1KCv+muJ/Ej+JXsUzxt4q+
4mNRX3GniLritGzkpX7koIxkLvpws+VfI1YVh12uFt+KpfSXbXR/NtY4rG02
kk6/11vGDQ5vdh/+G+cyV1tPyEy9n4tDM2E3G3xvs+v+xmNirXWy1HKQB12+
k416/9WN4ra5jgPlUNci98l09+Uk919DtbWROF2clos2k25+cezhRufjGTfP
tl9VeKoYk4/4l8UzjpskRolX8vGsnWf3tyu8T+Oal9hzolCMdf6pzptVXELs
ULrtYoHieHE9IeYp/Lf4R+wXf4lipd2jdCV0zWfinQDeDbhM4YFOl1TeP51+
kutC1pfy0Q7kQ07aQ70/8FzQ9ZdU3Bbp4WNdl4nXxWLsQ7zjMihrsngxH+0q
cBtoy4u+94KY6OttYrh/z8xFGaSbofBvqnMva9h0tOsXsdsyIduUXLThJedl
T/yP9bLPbaStb4ut4jKl6ST+UPh7dCGbqMCYVvi7fFy342f8+2qlbSd+UPhH
x293WVvyEc99yqW8IrUx5b5Mut1/W27kTRzwS/nov2YKnyXekgxDxfkKnyOa
FMe9b10ndW1yvbTlLcf9af2gp7/S8Y4K76r8ofDvrFdVRv9ctAP5aWsuF7rZ
Yd1gTwtc7j7rbvt/dPG39UjdjyrvYJFSniL8fibqpm+wvbVKs06UUj3pbPip
ZR6TjM2NurcBu9a9Q0mjPBnxTzr0tMVtW+32brft/Sh2psN38S4g7wr/nA2/
hf99zf7rDvG8eE70EXOV5kX8upiTjXjuPyIexr/4PunOcLqTxBSnf1F1PivG
iqniIeV5VDwo7hdTs+GzbxNjshHHvQfEfa7nIaelvsHiMTFEDELv9k/4qffE
nYobbhlpy9PiZOnhQjFe4XHZ0MW50tmsbDBbTBYTRRuluV6MEZ2L414DcbrT
UAZlNRZji+PaRFxTHL/nuO2vijezoUN0NoJ5SNwoRotnRUfxlPhJ9rA3F3oZ
4/s3un7kPC8TciDrCrEKuxCLs/HOBO9OUM4wcSc+Vrwr7nB4bi7ODt/JxTy6
2HM1c/oS5gfxscIf0L9qS79c2PyEfLzTznv41fS7ungjF34C3/JMLu7xnnzF
XKR5WbwmJovpYpbzkHaseEW87jSkZd3P3pk+o+8aK+4M0UScmYu28e4JOqKN
jxfH3pt201508Y1YbZ1QFvcftx2cqrjaat8isdBtX+K1FTqoI17Phh29ko10
6ARdkJ5+e6I41my9bXfY3y/IruuvubAv7Gx3LspYYFt8ORt577NNXedynnCY
NSB92zATNkYfs5ZgLdJF3CK6i57FsQZkLXiT4wiz7qOP6Cv81LXOd7PTkf9H
r1cY67vcZtZq69z/V1nvjJVeznu766CMdU6/+T9rje1eu23yvW2O495usScb
6yTWR6w7WSuyzmV9WyET6w3WHeUV3us8pP0jG35umX0Ra6Cu+XjmwbOMlcVR
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
doJ//T+fpWU3
          "]], Polygon3DBox[CompressedData["
1:eJwt2nW8FkUbxvEnTwLSJUiD0iAhoIR0p5R0h9ItLYdSRFpS+oAoqQKiEtLd
IGkQovgqKiihvL/rc99/fM/uzpmdmZ2ZnZ2dfXJ16tukTygQCOTlT5TtuphA
YCKSkIyPEI0EAjFYjg8wBx8hGauxFmvQEnMxGO3QG4P8WOHzsBDZSfMRmT1E
GvafxWRMxSTPfwuqxQYCFfEKnnL8H5rHBQID0BRN8Bquk853GITBuBu18r+F
tVjj17KfvHdgMzZhHzIho1/TbDRDSuoiJfGfY5uCbSe2u9iewEkcx24MJ+8p
yIt8mITFnP9bOBD4HQvYX+T5bceXXmequ62U8Rf8jDv4HMcIP4yjWOXxN5DP
aZzFOSzHaizDCizBYvzA+W+iG37Et8iiOmOblW16pEVTDFbdED4CzdhPoNxp
MBFJmBBn9aG2nu/tprqZhvSYhZl4B+M5fxzGYgxG4xPCN3qf2IAtWEmaySiJ
ElitLXGLo5T6GEqrXISPxCiMiLM67oKuaIsGqI2cxC2A/MiHHAjRT/7Hdhj/
fxvjkY7jDEiF1F4H/xJvFv/7EEsRwBDCe6EnGmNAjLWJ2qYHemI79uMmbnn7
bcM8T0tpzlTdIY7zY5CIe8T5S2kQ3gO90E3XErBz56JofCBQDEXQhvrqiW5o
5feR7ovhGOr9Wv17AX1sPlZjBZbhEmklksbfbKNsL7PNwvX+wfYB7iEzx8nE
PU7+J7GS/d3Yxf9+xE2/v3Sf7cRmHMdVXMFFynMI32APzmJxkDogjUVYqC3H
cVxzGHn4f27Esn+B7WWcwnVcQ1/if4wlYUtnIW4Tfgf/wwPcx13yvoMYrqu3
1+Vyv/YvsA1bsQef63qwBZswhnt4NOIpw5+kdQ83CP8Bd/ATbqseCC9CnBdQ
FGc4rko+1VADLXzMUV/MqbpEG++XDdESzVALr6IiKvn4kAev4In6oPoXPlP/
wBXaZD+u4x5+V5tFrKy7dO34BYU4/3kUVJ9BEXxDuVNTZ+mwj/29KE7ZC6IQ
mnJek4jVzxdeH5uxPWxpbMUX+NLT2+J19xfleoCHOMTxQRzFERxWGxN3Izbg
EyzQWEjbFEBn9jupjtgvozJiH46hFA6ErayncNrTPosLGIJVtNVKpOb8VEiL
zMiEbMiB55AdWXGOuCf82vdjR8jy24ujOILDKB5v95ruuZqorvvD0y7m/ysR
b2U6g2mY5df9iLiP1X74F/+pLYibG+mRAYXj7RqV10kcxAm8qX7uz8OB6I9z
hJ/CaZzFmTjr5+rvQdrtX7ZP8JKXLbPXQ5l4u45m3t9KeZlLe33oWOHtvI9U
xnZs87ZWemXjbezTuKUxJ4ufl93rNZOn157/v8j2Wa/nk/TLczgfZ+VX3a7H
buyJszFEfeG6xhe0Qgtcw+OIXdM//hzW81j9pCTptmb7Ojro/uba9/r4cgRP
kY/2LEN45hh7Nsdz/B9phvlfPdREdQR8rhATa/dZkG1JlME2jsuxLeVzisp4
FbGxFv8D8p6NhXHWt+f7Vv26ud/7CtPYrDH6dQzFCF2T5jR4jHSklSvWnpMZ
fI7xmj8z/6XMT1QXKMA15A/Z8+gJHuMRHuo55mPSQzzA/bCNL3VRz+uqle/X
QUe/31R/qcknjcZbz1/lGI63MBK9vMzvEndcnD1vp+IdpCP8mYiloWd92ojN
CSYjFVLG2fxAaUciNjfM6Pno2u/jGcqfB2nxNsfvYhZmYyY24Twu+txGc5wk
zu+KLnrWYQL6MJ6NZjsK4zCWOiikNta8gv2P8IKXb7pfw1te1sF+r+me64zW
6m8aI/A3+WWibBkxNs7mC78TdldzmDib16itWqA73kc4ztpH7RRiPxhn46fG
0Yfe9uoDr1PmKcSfihl6fnPcP2zlVbnV9k/D1mb1vD3rx9mcRuORnjHV/Pmh
sSk3csVZnspbc5UrXp+q12m47McKv4pruKQ5Ib7Hd173Ciuv8QTlUBZlkJJ0
0yA1EpGAWoTXQUkUR/2Iza/CiMdvMTbXUr1pP46wn7wOq0XsvgyhgudR0Z99
lf3ZVQCF9axVWaijwmjIfgkUQ1HdU2HLW31Cc6Ge3nd7ROy5mwUZ1GeRCY0j
lkYD5CW9PCgdsXvtidf/i2hG+Hvq/xFrq6YcR9WnvX+nQCL+5JxGEUs3P3Gu
kcR1ri8n2z1s9+JHtPWxQGNCO+9r3bzcXb0PNUcndIhYfPXJjrjg7aN2uo2b
MdZn9bx4A/08Xio/VngfxOFP6vxv3Ed/1X+szSmmxNj7lN6hPkU7+nx73OQa
fkFb9kcmUk4MRE+Mwk/872fc8Xg3sB2bg/a/29iKugnch3gBBVEKXzGGb8Aa
LMcOrEAyBmKrh5Un7it4GRVQLsHKdQs7PA/lew1XcA4XcBWdaY/pmIN56Kjn
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
JWRpKU3Nd/8PkO2AFA==
          "]], Polygon3DBox[CompressedData["
1:eJwt1mdsVlUYAOALLW2/r6BS2UNmlIhxAP4wSOJOBNkFQZQEJCzZEhlCAKNg
VNxacFKWgIuijVJZpUCMwRAqQzQskciQqUIxMfic3PPjSU979nvOeXvbDJ/Y
b0LtJEnGkceU3CR5j1ZkmcBkxmkUGo5nEhMZS35OkmT4R/kyV6hhjL+V8DbP
1EqSETxZK+37ArOZw3yeYUYcM5RnMp1p3JhNkg705iG68QDr1JWznu+oYC3f
8C3V7GFvbLPYHj7ig9x0j0/zPjOt6S71T3BSeQ8zeMS6e9CH/vSjL/cXKNOH
EfTkXnqr60UxAxkQ+9az1qY04XgmSf6gvnIBeTSmIQ1oRHtjlbKU5aygHZ85
nFV8wzpWsoJN+UmykfPUcJlzHKqTJAf5lW20tdfWrDNHGZuppIqtPKpuAMUM
YjAD2aTvBirYTDkb2UkZ6/meH/mBc8b6k1PUcIVL2fQu1SNDIXUp4JIY/ctl
LvKzO3ib+NctTJK/Yt+Mcpbr+Mfvf3M2m84V2lxkjbnns4BS4yylVPmAPteL
RxHVysc5xgb15VSyIie9M1+xVV0ZVWyhkgq+C31iuTZXzbnez5bG/YWznOZP
mnNU/S8c4BCHOcIFznOG0zFWYS9LKOVtHnNHZvOx8mJjLaOTuTqz25nvojDG
JI98dmi7Pdwlba8hS12a0SSu7RQnmMJ4TtLOWG1oRUdu5RZaOpsWtFduHdu0
5RF6UMxq8V3FgLz0TG/ITduEMW+mA/vM8VOIPT/HWB1gtbpZvEMZa+Pdnma8
qRypk97hIurTTd093EkOtelKb2P1YihjKaYfJereYC7zeI9FXKScr+kc4sod
NLX2ZjTPTfd+Q7yrLfLTMw5nWi/GtgHD3dExjGQUoxnGeXfpAk1y0zHrxVxa
5G7V517zPpiX5sCQS19XXsjLvBbX/GrYF73oHmPek/voR1/60D+eRWizwx3Y
xueF6R0Od3V7YXq3l7Pbu9rDTzE3jo9rHscEJvIUs9y7mUznWR5nEC2dQSua
0IibaE6O3JRLERnupitz9Xme53iVhcyhqT7NuIbraRzH3GVte6kOa4xrDWsO
a3iTkkw65jxGM5lSlrCMpYxlnz6n+I0znI1jbmMHB5O0TZhrJ79zlMMc43js
O8MZT/WeFvIy85nmb3eK5e3cxTJxLGFl7XTvBeSRJZ86Belewho6iW19iujC
g8a7j4cpiW+/ezZ9I/tjDv8rvtmQW0Kbd3krm57RkEyaKxrFGDbgDvesEw2V
O/p5M23CG6YLnZnPAkYzi7m8GPJ+POsQ2zEMoz+n1J3jNGc4z1lecrde4QM+
ZDGLQo625w1sZC3vcy391T3KwMI0B4YcPjjkU3Wfspov+DL2HaVuJE8wKPbt
zb6CNKeEHBLe5n6/76a6IC2Htxly4AXlKwVp36EMJ6cwzb1hDRudwVeUsZo1
lIfvE3veSiVV8Y5NyKTfEuHtdIlnWOX8d+WkuXpIfCMhhgMYnEm/YcK3zQWx
uhhjeIID1rQnru0SNRRq3zYn/eYJbULMT3KcWs4y4apyNRXUMEy/x2nMjbQx
Rms+M84krvJf+L+q7ZXcdC/b2UEFn8S309icjWhJq5ijrgvfVOacEnI7lWyJ
3wD/AyK1Wfk=
          "]]},
        Annotation[#, "Charting`Private`Tag$8483#1"]& ]],
      Lighting->"Neutral"]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJztyKERwCAABLC/YlmihjXYgRG4Q7N6R6inqj6Ruece60rSalJyevqnvPfe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvv/a9/
AYGSY60=
    "],
   VertexNormals->CompressedData["
1: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
ib0BBY+pGLLQ8vqEz0cIGX/0+7DBBMykaV3dGTWNP78gcyyjAlctnxNSODYJ
coaGlqlGNMyzv1NksicJtZ+rS1qJkkCjVML+4TwVhSL+xOtpEWCH7IuFYesu
eNUpK3ifSsVppUsDmc5E2Bl+9zejoBnsjcMqronTseD7u5BGxhB4Xev1OZzZ
A/2P/IJUYyhYbXau09unDr3CVb54ZEzAqd/Uto7XZDwdXK3iUtOJNuUblYKH
psDYISzkRT8ZtWbtkrdTO3CjUXy8VPUUcJC9Bip6qKiGnFftpgqxvduV4pJM
glVnPTzKNlCxjphyKXtbLUY1Gzc/PzIBhVlDD/SrJpDmPT+2168Dp+STHSLr
pmFsJbxxpy4Zv6RaVz440IVCDNcjB1am4JXjtvWcuVNoOvUic7VXDcraHY1U
+DUJ4dethhznx7Hq1qVzd4wHsVJk2LMilQJMyuK3JSRiB2/vGc/nvUgsUdat
M6FAxTaqH5F7Gl1yFZ5usMjB8OtRb9funIIM/UbbPdEUzNu5Nsv1PydknfnX
EveQDJlXbfSk/pAwx1NevVipC5e+lTxK2UmBeO9pdUNHGn4KHrtgmpyAlyVo
T3v/EQGq/pKrAih4LqdsvkyKPS/PbJ0Q8kAQUC1ekkmbRrOR2mf9Dych4fcl
WzGOL9AR4mYO7VT0kvn4LT+XCKWcIh9sspqg6ZJe3akoOn57UTPwfrkbCAd/
Zar7DELiFbfvz0yn8YieYZ/x6CTMqHWe2HdlFdw9oC8QFNGBy4PTkzGCdLjt
e8NVBUfxslPZr/0GHSivJG/3jpPO7pfVj3YojCGtQb2O40wHGgxXvNc8RIfU
nLUSxeGjqPhHoqbHsQ57E+c+vTxPg32tc7MnTYm4DQYuRDnUYpnSvtvz9gw4
rNvSkHFjGJtNt4Yk8myBHue7EWLiE1AqNqg0mkKF4qBNHOPqaWCkU/tO2nQC
YjO3Rdy4S4V12X83M216MUym6vGmLwwwPz5VE/ClC0WrKGKHY7rR1K9pVOAQ
ExavfdhT5tiJ4RfcUrd69OChij+ZHxUYMLVJJXgY+nApcVtjr005ar/49Gkv
zoD75EXhwJkkSBFZqfKNqceG5f3bHZxnQLTCI/zDOSewySxhNX6uwt18L0Qk
hWbALHKq3qWxHgtLvuePRLVglJxkuCvb2215qwUHrFrQdnbjyBtBMdx2ZI46
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
QSWz+w==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  Background->GrayLevel[1],
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-8, 8}, {-8, 8}, {-8, 8}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711142527388266*^9, 3.711142551793168*^9}, 
   3.7111426026499987`*^9, {3.711142638576449*^9, 3.711142649343624*^9}, {
   3.7111427528311367`*^9, 3.711142769136478*^9}, 3.711142826734614*^9, {
   3.7111430025550528`*^9, 3.71114302991864*^9}, 3.711143097271565*^9, 
   3.711143156698493*^9, {3.711291328148394*^9, 3.711291344368168*^9}, {
   3.711291413759158*^9, 3.7112914201643057`*^9}, {3.711291624318771*^9, 
   3.711291659322481*^9}, {3.71129235884236*^9, 3.711292420026629*^9}, 
   3.7112926333081417`*^9, 3.7112929932947702`*^9, {3.711302752824317*^9, 
   3.711302776806312*^9}, 3.711302810936645*^9, {3.7113028769205627`*^9, 
   3.7113028967791967`*^9}, {3.711303220935845*^9, 3.7113032531230164`*^9}, 
   3.711303318143379*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
OLJBsh/iNT9eCyDdQgBZwKR28WORaTjHxPBro90nRjucQDQvGniatfewYT3C
6HCz0UfpTczuwGTarkym7Wqjo1KuEkNE0CcLoNtDVv8EHn8sJawnWbPKCcSv
Nx+0eRgxfESiF4TQ+VekSrWISATTvC5eQ4lgCI7F8OkHUZ0+fboIRgZAu0G6
t0Cw1Y1gN068MeefSZmiJsnVkx1h9uEWGyR6ZVKJWO8b0F8Z+CLUgngtitfi
eC1BVTYnp5yPC42OP5jMoU0RUUT1A0cv3JCnTM7GGb8MNRmyhJ5NJ9WjE4qO
1TmWq4yUg0zUhhipELMxRTXzgNHMeR1o9ST9fCrpyqhO6h+pDyO/GFlJ6/kT
ukQY7dfBMywRhgyglyTbd+oXhmPDsIQ6Tcr7G9nZXyN8N++7sGHvDXP6yrvr
UoLDjfMYBprpRUeYT00aZpuEiChLCugRimXxWp6Gzvp5/lwlFy6xGyVas62i
zxyJ4IDpxtNgiSa+3UQJcbF5qijy1N2/KLrk5Dsq4CIbgGZ/rrPnhhTV7OYY
I/vDNrgnjB2m4SdNT1490hyd1M5PdA5vzHtD8b7fUyQnQycv8mnlWkKhDW3v
RuVQqBgUiFDkgzGLrCzUwWKsc9MC6kz2VcNVD1+VJ5LJjyuD2994EXWBikB3
E+hgRt4wIoHpNyYK8008llSI0wbaROWQPjY7ssyxxz63ajB6zzmJgcXvNPa/
1iSFEO98m7+HHHkGv3aa0iebfTqUWOxBE5lJGffEbzOp7rm0+uF564KyRtFI
bjtj2zB3ydyKdtMRQZ42fia/RBukhOldVsQhQKwidPscSPpoy6iOldORXyxs
Xcm8k2/nfRvW77V+FiLlzM4xUBjoCBvcZOs9EdUsR5s5JjyLjQjL8VGNMEuN
XgtMVtCCXxhRXjEkJCOjjccxIwONIGjZsxO/ICenplxyXm2Ry8+3+y41XuLZ
W4wwSpWMNxmZXGShmFlU0yWvUO2rKQVFd14sqnF3pOHADwaKNnh4mmsSbfzy
AqONzuOFNqR/2AIgzxynUOn+k0sE4aCdLkaQirk52oSFAV9gnDfUuG2igUev
cec+LRFDWmxpiSDLrVx25nsjpAgyrSQhNxuwlxgx0K4s9umVCHJyUopoXUyi
Jvb72/0or+tNUm43glDvI0b0KUU1d/VyUQ3V3yosedVUzYhArGejNnu6c5j1
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
hQVYUovwS14bU9kbhq5AnLBPr+evilb/D+mQ2PE=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{
   "AbsoluteFileName", "[", "\"\<Downloads/fiber_2-3-0.stl\>\"", "]"}], "]"}],
   "]"}]], "Input",
 NumberMarks->False]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 751},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 259, 5, 158, "Title"],
Cell[842, 29, 270, 9, 8, "Text"],
Cell[CellGroupData[{
Cell[1137, 42, 176, 2, 65, "Chapter"],
Cell[1316, 46, 26940, 595, 1610, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28293, 646, 93, 1, 65, "Chapter"],
Cell[28389, 649, 240, 4, 49, "Text"],
Cell[28632, 655, 25056, 560, 1832, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53725, 1220, 92, 1, 65, "Chapter"],
Cell[53820, 1223, 408, 9, 121, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[54265, 1237, 95, 1, 54, "Chapter"],
Cell[54363, 1240, 1026, 26, 96, "Input"],
Cell[55392, 1268, 2469, 44, 117, "Input"],
Cell[CellGroupData[{
Cell[57886, 1316, 1113, 26, 138, "Input"],
Cell[59002, 1344, 182, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59221, 1351, 827, 19, 96, "Input"],
Cell[60051, 1372, 77, 1, 32, "Output"]
}, Open  ]],
Cell[60143, 1376, 521, 14, 75, "Input"],
Cell[60667, 1392, 1424, 32, 117, "Input"],
Cell[CellGroupData[{
Cell[62116, 1428, 280, 6, 32, "Input"],
Cell[62399, 1436, 200, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[62648, 1444, 88, 1, 54, "Chapter"],
Cell[62739, 1447, 2682, 72, 348, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65470, 1525, 120, 1, 80, "Title"],
Cell[CellGroupData[{
Cell[65615, 1530, 2291, 52, 159, "Input"],
Cell[67909, 1584, 212, 2, 32, "Output"]
}, Open  ]],
Cell[68136, 1589, 1022, 28, 138, "Input"],
Cell[69161, 1619, 841, 22, 75, "Input"],
Cell[70005, 1643, 2645, 55, 201, "Input"],
Cell[72653, 1700, 1462, 38, 75, "Input"],
Cell[74118, 1740, 3107, 70, 327, "Input"],
Cell[77228, 1812, 2172, 60, 348, "Input"],
Cell[CellGroupData[{
Cell[79425, 1876, 720, 14, 54, "Input"],
Cell[80148, 1892, 379, 5, 32, "Output"]
}, Open  ]],
Cell[80542, 1900, 288, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[80855, 1911, 214, 5, 32, "Input"],
Cell[81072, 1918, 355, 8, 24, "Message"],
Cell[81430, 1928, 333, 7, 24, "Message"],
Cell[81766, 1937, 123, 2, 32, "Output"]
}, Open  ]],
Cell[81904, 1942, 294, 8, 54, "Input"],
Cell[82201, 1952, 19, 0, 65, "Chapter"],
Cell[CellGroupData[{
Cell[82245, 1956, 121, 2, 54, "Chapter"],
Cell[82369, 1960, 2829, 68, 327, "Input"],
Cell[CellGroupData[{
Cell[85223, 2032, 2148, 61, 201, "Input"],
Cell[87374, 2095, 195263, 3219, 437, 163847, 2705, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[282652, 5317, 207, 6, 32, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

